{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styles from './Slot.module.scss';\nimport PropTypes from 'prop-types';\n\nvar Slot = function Slot(_ref) {\n  var item = _ref.item,\n      index = _ref.index;\n  var ref = React.createRef();\n\n  var _useState = useState([]),\n      childNodes = _useState[0],\n      setChildNodes = _useState[1];\n\n  useEffect(function () {\n    setChildNodes(ref.current.childNodes);\n    setHeight(ref);\n  }, [ref]);\n\n  var setHeight = function setHeight(_ref2) {\n    var current = _ref2.current;\n    if (!current) return;else {\n      var rootStyle = getComputedStyle(current);\n      var padding = +rootStyle.paddingTop.replace('px', '') + +rootStyle.paddingBottom.replace('px', '');\n      var _childNodes = current.childNodes;\n\n      if (_childNodes.length) {\n        console.log(padding);\n        var totalHeight = item.isActive ? _childNodes[0].offsetHeight + _childNodes[1].offsetHeight : _childNodes[0].offsetHeight;\n        totalHeight += padding;\n        current.style.height = totalHeight + 'px';\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.root + (item.isActive ? ' ' + styles.isActive : ''),\n    \"custom-id\": index,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.title,\n    \"custom-id\": index,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, item.title, \" \", index), __jsx(\"div\", {\n    className: styles.description,\n    \"custom-id\": index,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, item.description));\n};\n\nSlot.propTypes = {\n  item: PropTypes.object\n};\nexport default Slot;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js"],"names":["React","useEffect","useState","styles","PropTypes","Slot","item","index","ref","createRef","childNodes","setChildNodes","current","setHeight","rootStyle","getComputedStyle","padding","paddingTop","replace","paddingBottom","length","console","log","totalHeight","isActive","offsetHeight","style","height","root","title","description","propTypes","object"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAqB;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAChC,MAAMC,GAAG,GAAGR,KAAK,CAACS,SAAN,EAAZ;;AADgC,kBAEMP,QAAQ,CAAC,EAAD,CAFd;AAAA,MAExBQ,UAFwB;AAAA,MAEZC,aAFY;;AAIhCV,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,aAAa,CAACH,GAAG,CAACI,OAAJ,CAAYF,UAAb,CAAb;AACAG,IAAAA,SAAS,CAACL,GAAD,CAAT;AACD,GAHQ,EAGN,CAAEA,GAAF,CAHM,CAAT;;AAKA,MAAMK,SAAS,GAAG,SAAZA,SAAY,QAAiB;AAAA,QAAdD,OAAc,SAAdA,OAAc;AACjC,QAAI,CAACA,OAAL,EAAc,OAAd,KACK;AACH,UAAME,SAAS,GAAGC,gBAAgB,CAACH,OAAD,CAAlC;AACA,UAAMI,OAAO,GAAG,CAACF,SAAS,CAACG,UAAV,CAAqBC,OAArB,CAA6B,IAA7B,EAAmC,EAAnC,CAAD,GAA2C,CAACJ,SAAS,CAACK,aAAV,CAAwBD,OAAxB,CAAgC,IAAhC,EAAsC,EAAtC,CAA5D;AAFG,UAGKR,WAHL,GAGoBE,OAHpB,CAGKF,UAHL;;AAIH,UAAIA,WAAU,CAACU,MAAf,EAAuB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACA,YAAIO,WAAW,GAAGjB,IAAI,CAACkB,QAAL,GAAgBd,WAAU,CAAE,CAAF,CAAV,CAAgBe,YAAhB,GAA+Bf,WAAU,CAAE,CAAF,CAAV,CAAgBe,YAA/D,GAA8Ef,WAAU,CAAE,CAAF,CAAV,CAAgBe,YAAhH;AACAF,QAAAA,WAAW,IAAIP,OAAf;AACAJ,QAAAA,OAAO,CAACc,KAAR,CAAcC,MAAd,GAAuBJ,WAAW,GAAG,IAArC;AACD;AACF;AACF,GAbD;;AAeA,SACE;AAAK,IAAA,SAAS,EAAGpB,MAAM,CAACyB,IAAP,IAAetB,IAAI,CAACkB,QAAL,GAAgB,MAAMrB,MAAM,CAACqB,QAA7B,GAAwC,EAAvD,CAAjB;AACK,iBAAYjB,KADjB;AAEK,IAAA,GAAG,EAAGC,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAGL,MAAM,CAAC0B,KAAxB;AAAgC,iBAAYtB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDD,IAAI,CAACuB,KAA3D,OAAqEtB,KAArE,CAHF,EAIE;AAAK,IAAA,SAAS,EAAGJ,MAAM,CAAC2B,WAAxB;AAAsC,iBAAYvB,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4DD,IAAI,CAACwB,WAAjE,CAJF,CADF;AAQD,CAhCD;;AAkCAzB,IAAI,CAAC0B,SAAL,GAAiB;AACfzB,EAAAA,IAAI,EAAEF,SAAS,CAAC4B;AADD,CAAjB;AAIA,eAAe3B,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styles from './Slot.module.scss'\nimport PropTypes from 'prop-types'\n\nconst Slot = ({ item, index }) => {\n  const ref = React.createRef()\n  const [ childNodes, setChildNodes ] = useState([])\n\n  useEffect(() => {\n    setChildNodes(ref.current.childNodes)\n    setHeight(ref)\n  }, [ ref ])\n\n  const setHeight = ({ current }) => {\n    if (!current) return\n    else {\n      const rootStyle = getComputedStyle(current)\n      const padding = +rootStyle.paddingTop.replace('px', '') + (+rootStyle.paddingBottom.replace('px', ''))\n      const { childNodes } = current\n      if (childNodes.length) {\n        console.log(padding)\n        let totalHeight = item.isActive ? childNodes[ 0 ].offsetHeight + childNodes[ 1 ].offsetHeight : childNodes[ 0 ].offsetHeight\n        totalHeight += padding\n        current.style.height = totalHeight + 'px'\n      }\n    }\n  }\n\n  return (\n    <div className={ styles.root + (item.isActive ? ' ' + styles.isActive : '') }\n         custom-id={ index }\n         ref={ ref }>\n      <div className={ styles.title } custom-id={ index }>{ item.title } { index }</div>\n      <div className={ styles.description } custom-id={ index }>{ item.description }</div>\n    </div>\n  )\n}\n\nSlot.propTypes = {\n  item: PropTypes.object,\n}\n\nexport default Slot\n"]},"metadata":{},"sourceType":"module"}