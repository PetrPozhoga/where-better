{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { changeValue as _changeValue } from \"../store/test/actions\";\n\nvar Index = function Index(_ref) {\n  var test = _ref.test;\n  console.log(test);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  });\n};\n\nIndex.getInitialProps = function _callee(ctx, _ref2) {\n  var store, req, isServer;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = _ref2.store, req = _ref2.req;\n          isServer = !!req;\n\n          if (isServer) {\n            console.log(store, 12); //await reduxStore.dispatch(changeValue('Hello world'))\n          } else store.dispatch(_changeValue('Hello world'));\n\n          return _context.abrupt(\"return\", {});\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    test: state.test\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeValue: function changeValue(text) {\n      return dispatch(_changeValue(text));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/pages/index.js"],"names":["React","connect","bindActionCreators","changeValue","Index","test","console","log","getInitialProps","ctx","store","req","isServer","dispatch","mapStateToProps","state","mapDispatchToProps","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAW,IAAXA,YAAT,QAA4B,uBAA5B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAPD;;AASAD,KAAK,CAACI,eAAN,GAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAcC,UAAAA,KAAd,SAAcA,KAAd,EAAqBC,GAArB,SAAqBA,GAArB;AAChBC,UAAAA,QADgB,GACL,CAAC,CAACD,GADG;;AAEtB,cAAIC,QAAJ,EAAc;AACZN,YAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ,EAAmB,EAAnB,EADY,CAEZ;AACD,WAHD,MAIKA,KAAK,CAACG,QAAN,CAAeV,YAAW,CAAC,aAAD,CAA1B;;AANiB,2CAOf,EAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAUA,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLV,IAAAA,IAAI,EAAEU,KAAK,CAACV;AADP,GAAP;AAGD,CAJD;;AAMA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAH,QAAQ;AAAA,SAAK;AACtCV,IAAAA,WAAW,EAAE,qBAAAc,IAAI;AAAA,aAAIJ,QAAQ,CAACV,YAAW,CAACc,IAAD,CAAZ,CAAZ;AAAA;AADqB,GAAL;AAAA,CAAnC;;AAIA,eAAehB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { changeValue } from \"../store/test/actions\"\n\nconst Index = ({test}) => {\n  console.log(test)\n  return (\n    <div>\n\n    </div>\n  )\n}\n\nIndex.getInitialProps = async (ctx, { store, req }) => {\n  const isServer = !!req\n  if (isServer) {\n    console.log(store, 12)\n    //await reduxStore.dispatch(changeValue('Hello world'))\n  }\n  else store.dispatch(changeValue('Hello world'))\n  return {}\n}\n\nconst mapStateToProps = state => {\n  return {\n    test: state.test\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  changeValue: text => dispatch(changeValue(text))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)\n"]},"metadata":{},"sourceType":"module"}