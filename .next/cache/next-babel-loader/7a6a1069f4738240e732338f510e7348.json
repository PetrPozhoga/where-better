{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Root.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\n\nvar Root = function Root(_ref) {\n  var slot = _ref.slot;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, slot);\n};\n\nRoot.getInitialProps = function _callee(_ref2) {\n  var store, req, isServer;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = _ref2.store, req = _ref2.req;\n          isServer = !!req;\n          if (!isServer) store.dispatch(changeValue('Hello world'));\n          return _context.abrupt(\"return\", {});\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Root;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Root.js"],"names":["React","bindActionCreators","Root","slot","getInitialProps","store","req","isServer","dispatch","changeValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACzB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,IADJ,CADF;AAKD,CAND;;AAQAD,IAAI,CAACE,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT,EAAgBC,GAAhB,SAAgBA,GAAhB;AACfC,UAAAA,QADe,GACJ,CAAC,CAACD,GADE;AAErB,cAAI,CAACC,QAAL,EAAeF,KAAK,CAACG,QAAN,CAAeC,WAAW,CAAC,aAAD,CAA1B;AAFM,2CAGd,EAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAMA,eAAeP,IAAf","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from 'redux'\n\nconst Root = ({ slot }) => {\n  return (\n    <div>\n      { slot }\n    </div>\n  )\n}\n\nRoot.getInitialProps = async ({ store, req }) => {\n  const isServer = !!req\n  if (!isServer) store.dispatch(changeValue('Hello world'))\n  return {}\n}\n\nexport default Root\n"]},"metadata":{},"sourceType":"module"}