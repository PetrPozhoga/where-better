{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/SlideShow/SlideShow.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './SlideShow.module.scss';\n\nvar SlideShow = function SlideShow(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? [] : _ref$children,\n      showElements = _ref.showElements,\n      _ref$animationTime = _ref.animationTime,\n      animationTime = _ref$animationTime === void 0 ? 300 : _ref$animationTime,\n      classNameContainer = _ref.classNameContainer,\n      slideHeight = _ref.slideHeight,\n      idRoot = _ref.idRoot,\n      paddingLeft = _ref.paddingLeft,\n      paddingRight = _ref.paddingRight,\n      marginRight = _ref.marginRight;\n\n  var _useState = useState({}),\n      rootElement = _useState[0],\n      setRootElement = _useState[1];\n\n  var _useState2 = useState({}),\n      wrapElement = _useState2[0],\n      setWrapElement = _useState2[1];\n\n  var _useState3 = useState({}),\n      containerElement = _useState3[0],\n      setContainerElement = _useState3[1];\n\n  var _useState4 = useState([]),\n      copyChildren = _useState4[0],\n      setCopyChildren = _useState4[1];\n\n  var _useState5 = useState({\n    totalSlide: children.length,\n    currentIndex: 0,\n    currentElementIndex: 0\n  }),\n      slideOption = _useState5[0],\n      setSlideOption = _useState5[1];\n\n  var _useState6 = useState(false),\n      slideIsOver = _useState6[0],\n      setSlideIsOver = _useState6[1];\n\n  useEffect(function () {\n    setRootElement(document.getElementById(styles.root + idRoot));\n  }, [rootElement]);\n  useEffect(function () {\n    setWrapElement(document.querySelector('.' + classNameContainer));\n  }, [wrapElement]);\n  useEffect(function () {\n    var container = document.querySelector('.' + styles.container + classNameContainer);\n    setContainerElement(container);\n    var slideItem = document.querySelectorAll('.' + styles.container + classNameContainer + '>div');\n    slideItem.forEach(function (item, index) {\n      item.style.width = (wrapElement.offsetWidth - (showElements - 1) * marginRight) / showElements + 'px'; //item.style.marginRight = (index + 1) < showElements ? (marginRight || 0) + 'px' : ''\n\n      item.style.marginRight = (marginRight || 0) + 'px';\n    });\n  }, [containerElement]);\n  useEffect(function () {\n    setCopyChildren(children.slice());\n  }, [children]);\n\n  var changeSlide = function changeSlide(slide) {\n    if (slideIsOver) return false;else {\n      setSlideIsOver(true);\n      var newChildrenArr = [];\n      var currentIndex = slideOption.currentIndex + slide;\n      var currentElementIndex = slideOption.currentElementIndex + slide;\n      currentElementIndex = currentElementIndex < 0 ? copyChildren.length - 1 : currentElementIndex > copyChildren.length - 1 ? 0 : currentElementIndex;\n\n      if (slide === 1) {\n        var firstChild = copyChildren[0];\n        newChildrenArr = [].concat(_toConsumableArray(copyChildren.slice(1, copyChildren.length)), [firstChild]);\n      } else {\n        var lastChild = copyChildren[copyChildren.length - 1];\n        newChildrenArr = [lastChild].concat(_toConsumableArray(copyChildren.slice(0, copyChildren.length - 1)));\n      }\n\n      setSlideOption(_objectSpread({}, slideOption, {\n        currentIndex: currentIndex,\n        currentElementIndex: currentElementIndex\n      }));\n      setTimeout(function () {\n        setCopyChildren(newChildrenArr);\n        document.querySelector('.' + styles.container + classNameContainer).style.marginLeft = currentIndex * (wrapElement.offsetWidth / showElements) + 'px';\n        setSlideIsOver(false);\n      }, slide === 1 ? animationTime : 0);\n    }\n  };\n\n  var setCurrentSlide = function setCurrentSlide(index) {\n    if (slideOption.currentElementIndex === index) return;else {\n      var container = document.querySelector('.' + styles.container + classNameContainer);\n      container.style.transition = 'none';\n      var currentIndex = index - slideOption.currentElementIndex;\n      var newChildrenArr = [];\n\n      if (currentIndex >= 1) {\n        var firstChild = copyChildren.slice(0, Math.abs(currentIndex));\n        console.log(firstChild);\n        newChildrenArr = [].concat(_toConsumableArray(copyChildren.slice(Math.abs(currentIndex), copyChildren.length)), _toConsumableArray(firstChild));\n      } else {\n        var lastChild = copyChildren.slice(copyChildren.length - Math.abs(currentIndex), copyChildren.length);\n        copyChildren.splice(copyChildren.length - Math.abs(currentIndex), lastChild.length);\n        newChildrenArr = [].concat(_toConsumableArray(lastChild), _toConsumableArray(copyChildren));\n      }\n\n      setSlideOption(_objectSpread({}, slideOption, {\n        currentIndex: slideOption.currentIndex + currentIndex,\n        currentElementIndex: index\n      }));\n      setCopyChildren(newChildrenArr);\n      container.style.marginLeft = (slideOption.currentIndex + currentIndex) * (wrapElement.offsetWidth / showElements) + 'px';\n      setTimeout(function () {\n        return container.style.transition = 'left linear .3s';\n      }, animationTime);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.root,\n    id: styles.root + idRoot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: slideHeight,\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: rootElement.offsetWidth - (paddingLeft || 0) - (paddingRight || 0) + 'px'\n    },\n    className: styles.wrapp + ' ' + classNameContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.container + ' ' + styles.container + classNameContainer,\n    style: {\n      left: -(slideOption.currentIndex * ((wrapElement.offsetWidth + (marginRight || 0) * showElements) / showElements)) + 'px',\n      width: wrapElement && wrapElement.offsetWidth / showElements * copyChildren.length + 'px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, copyChildren.map(function (item) {\n    return item;\n  }))), __jsx(\"div\", {\n    className: styles.arrowControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(\"svg\", {\n    width: \"65\",\n    height: \"65\",\n    viewBox: \"0 0 65 65\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    onClick: changeSlide.bind(null, -1),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(\"circle\", {\n    cx: \"32.5\",\n    cy: \"32.5\",\n    r: \"32.5\",\n    fill: \"#4D3E3D\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M40.3939 47.7127L36.278 51.8287L16.7576 32.3083L36.278 12.7878L40.3939 16.9038L24.9894 32.3083L40.3939 47.7127Z\",\n    fill: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })), __jsx(\"svg\", {\n    width: \"65\",\n    height: \"65\",\n    viewBox: \"0 0 65 65\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    onClick: changeSlide.bind(null, 1),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, __jsx(\"circle\", {\n    r: \"32.5\",\n    transform: \"matrix(-1 0 0 1 32.5 32.5)\",\n    fill: \"#4D3E3D\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M24.6061 47.7127L28.722 51.8287L48.2424 32.3083L28.722 12.7878L24.6061 16.9038L40.0106 32.3083L24.6061 47.7127Z\",\n    fill: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })))), __jsx(\"div\", {\n    className: styles.circleControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, copyChildren.map(function (item, key) {\n    return __jsx(\"div\", {\n      key: key + item,\n      onClick: setCurrentSlide.bind(null, key),\n      className: slideOption.currentElementIndex === key ? styles.activeCircle : '',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\nexport default SlideShow;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/SlideShow/SlideShow.js"],"names":["React","useState","useEffect","styles","SlideShow","children","showElements","animationTime","classNameContainer","slideHeight","idRoot","paddingLeft","paddingRight","marginRight","rootElement","setRootElement","wrapElement","setWrapElement","containerElement","setContainerElement","copyChildren","setCopyChildren","totalSlide","length","currentIndex","currentElementIndex","slideOption","setSlideOption","slideIsOver","setSlideIsOver","document","getElementById","root","querySelector","container","slideItem","querySelectorAll","forEach","item","index","style","width","offsetWidth","slice","changeSlide","slide","newChildrenArr","firstChild","lastChild","setTimeout","marginLeft","setCurrentSlide","transition","Math","abs","console","log","splice","height","position","wrapp","left","map","arrowControl","bind","circleControl","key","activeCircle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styles from './SlideShow.module.scss'\n\nconst SlideShow = ({ children = [], showElements, animationTime = 300, classNameContainer, slideHeight, idRoot, paddingLeft, paddingRight, marginRight }) => {\n\n  const [ rootElement, setRootElement ] = useState({})\n  const [ wrapElement, setWrapElement ] = useState({})\n  const [ containerElement, setContainerElement ] = useState({})\n  const [ copyChildren, setCopyChildren ] = useState([])\n  const [ slideOption, setSlideOption ] = useState({\n    totalSlide: children.length,\n    currentIndex: 0,\n    currentElementIndex: 0\n  })\n  const [ slideIsOver, setSlideIsOver ] = useState(false)\n\n  useEffect(() => {\n    setRootElement(document.getElementById(styles.root + idRoot))\n  }, [ rootElement ])\n\n  useEffect(() => {\n    setWrapElement(document.querySelector('.' + classNameContainer))\n  }, [ wrapElement ])\n\n  useEffect(() => {\n    let container = document.querySelector('.' + styles.container + classNameContainer)\n    setContainerElement(container)\n    let slideItem = document.querySelectorAll('.' + styles.container + classNameContainer + '>div')\n    slideItem.forEach((item, index) => {\n      item.style.width = ((wrapElement.offsetWidth - ((showElements - 1) * marginRight)) / (showElements )) + 'px'\n      //item.style.marginRight = (index + 1) < showElements ? (marginRight || 0) + 'px' : ''\n      item.style.marginRight = (marginRight || 0) + 'px'\n    })\n\n  }, [ containerElement ])\n\n  useEffect(() => {\n    setCopyChildren(children.slice())\n  }, [ children ])\n\n  const changeSlide = slide => {\n    if (slideIsOver) return false\n    else {\n      setSlideIsOver(true)\n      let newChildrenArr = []\n      let currentIndex = slideOption.currentIndex + (slide)\n      let currentElementIndex = slideOption.currentElementIndex + (slide)\n      currentElementIndex = currentElementIndex < 0 ? copyChildren.length - 1 : currentElementIndex > (copyChildren.length - 1) ? 0 : currentElementIndex\n\n      if (slide === 1) {\n        let firstChild = copyChildren[ 0 ]\n        newChildrenArr = [ ...copyChildren.slice(1, copyChildren.length), firstChild ]\n      }\n      else {\n        let lastChild = copyChildren[ copyChildren.length - 1 ]\n        newChildrenArr = [ lastChild, ...copyChildren.slice(0, copyChildren.length - 1) ]\n      }\n\n      setSlideOption({ ...slideOption, currentIndex, currentElementIndex })\n\n      setTimeout(() => {\n        setCopyChildren(newChildrenArr)\n        document.querySelector('.' + styles.container + classNameContainer).style.marginLeft = (currentIndex * (wrapElement.offsetWidth / showElements) + 'px')\n        setSlideIsOver(false)\n      }, slide === 1 ? animationTime : 0)\n    }\n  }\n\n  const setCurrentSlide = index => {\n    if (slideOption.currentElementIndex === index) return\n    else {\n      let container = document.querySelector('.' + styles.container + classNameContainer)\n      container.style.transition = 'none'\n      let currentIndex = index - slideOption.currentElementIndex\n\n      let newChildrenArr = []\n      if (currentIndex >= 1) {\n        let firstChild = copyChildren.slice(0, Math.abs(currentIndex))\n        console.log(firstChild)\n        newChildrenArr = [ ...copyChildren.slice(Math.abs(currentIndex), copyChildren.length), ...firstChild ]\n      }\n      else {\n        let lastChild = copyChildren.slice(copyChildren.length - Math.abs(currentIndex), copyChildren.length)\n        copyChildren.splice(copyChildren.length - Math.abs(currentIndex), lastChild.length)\n        newChildrenArr = [ ...lastChild, ...copyChildren ]\n      }\n\n\n      setSlideOption({\n        ...slideOption,\n        currentIndex: slideOption.currentIndex + (currentIndex),\n        currentElementIndex: index\n      })\n\n      setCopyChildren(newChildrenArr)\n      container.style.marginLeft = ((slideOption.currentIndex + (currentIndex)) * (wrapElement.offsetWidth / showElements) + 'px')\n\n      setTimeout(() => container.style.transition = 'left linear .3s', animationTime)\n    }\n  }\n\n  return (\n    <div className={ styles.root } id={ styles.root + idRoot }>\n      <div style={ { height: slideHeight, position: 'relative' } }>\n        <div\n          style={ {\n            width: rootElement.offsetWidth - (paddingLeft || 0) - (paddingRight || 0) + 'px'\n          } }\n          className={ styles.wrapp + ' ' + classNameContainer }>\n          <div className={ styles.container + ' ' + styles.container + classNameContainer }\n               style={ {\n                 left: -(slideOption.currentIndex * ((wrapElement.offsetWidth + ((marginRight || 0) * showElements)) / showElements)) + 'px',\n                 width: wrapElement && (wrapElement.offsetWidth / showElements) * copyChildren.length + 'px'\n               } }>\n            { copyChildren.map(item => item) }\n          </div>\n        </div>\n        <div className={ styles.arrowControl }>\n          <svg width=\"65\" height=\"65\" viewBox=\"0 0 65 65\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n               onClick={ changeSlide.bind(null, -1) }\n          >\n            <circle cx=\"32.5\" cy=\"32.5\" r=\"32.5\" fill=\"#4D3E3D\"/>\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                  d=\"M40.3939 47.7127L36.278 51.8287L16.7576 32.3083L36.278 12.7878L40.3939 16.9038L24.9894 32.3083L40.3939 47.7127Z\"\n                  fill=\"white\"/>\n          </svg>\n          <svg width=\"65\" height=\"65\" viewBox=\"0 0 65 65\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n               onClick={ changeSlide.bind(null, 1) }\n          >\n            <circle r=\"32.5\" transform=\"matrix(-1 0 0 1 32.5 32.5)\" fill=\"#4D3E3D\"/>\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                  d=\"M24.6061 47.7127L28.722 51.8287L48.2424 32.3083L28.722 12.7878L24.6061 16.9038L40.0106 32.3083L24.6061 47.7127Z\"\n                  fill=\"white\"/>\n          </svg>\n\n        </div>\n      </div>\n      <div className={ styles.circleControl }>\n        { copyChildren.map((item, key) =>\n          <div key={ key + item }\n               onClick={ setCurrentSlide.bind(null, key) }\n               className={ slideOption.currentElementIndex === key ? styles.activeCircle : '' }/>\n        ) }\n      </div>\n    </div>\n  )\n}\n\nexport default SlideShow\n"]},"metadata":{},"sourceType":"module"}