{"ast":null,"code":"var _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styles from './Slot.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Slot = ({\n  item,\n  index\n}) => {\n  const ref = React.createRef();\n  useEffect(() => {\n    setHeight(ref);\n  }, [ref]);\n\n  const setHeight = ({\n    current\n  }) => {\n    if (!current) return;else {\n      const rootPadding = sum(getStyle(current, ['paddingTop', 'paddingBottom']));\n      const {\n        childNodes\n      } = current;\n\n      if (childNodes.length) {\n        console.log(rootPadding);\n        const titleHeight = sum(getStyle(childNodes[0], ['height']));\n        let totalHeight = item.isActive ? titleHeight + sum(getStyle(childNodes[1], ['height', 'marginTop'])) : titleHeight;\n        totalHeight += rootPadding;\n        current.style.height = totalHeight + 'px';\n      }\n    }\n  };\n\n  const sum = arr => arr.reduce((acc, item) => acc += item, 0);\n\n  const getStyle = (node, styleList) => styleList.map(style => Number(getComputedStyle(node)[style].replace('px', '')));\n\n  return __jsx(\"div\", {\n    className: styles.root + (item.isActive ? ' ' + styles.isActive : ''),\n    \"custom-id\": index,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.title,\n    \"custom-id\": index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, item.title, index, __jsx(\"svg\", {\n    width: \"8\",\n    height: \"14\",\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M-1.0334e-06 11.8207L1.39309 13.2138L8 6.60691L1.39309 -5.77595e-07L-1.21788e-07 1.39309L5.21382 6.60691L-1.0334e-06 11.8207Z\",\n    fill: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: styles.description,\n    \"custom-id\": index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, item.description));\n};\n\nSlot.propTypes = {\n  item: PropTypes.object\n};\nexport default Slot;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js"],"names":["React","useEffect","useState","styles","PropTypes","Slot","item","index","ref","createRef","setHeight","current","rootPadding","sum","getStyle","childNodes","length","console","log","titleHeight","totalHeight","isActive","style","height","arr","reduce","acc","node","styleList","map","Number","getComputedStyle","replace","root","title","description","propTypes","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styles from './Slot.module.scss'\nimport PropTypes from 'prop-types'\n\nconst Slot = ({ item, index }) => {\n  const ref = React.createRef()\n\n  useEffect(() => {\n    setHeight(ref)\n  }, [ ref ])\n\n  const setHeight = ({ current }) => {\n    if (!current) return\n    else {\n      const rootPadding = sum(getStyle(current, ['paddingTop', 'paddingBottom']))\n      const { childNodes } = current\n      if (childNodes.length) {\n        console.log(rootPadding)\n        const titleHeight = sum(getStyle(childNodes[0], ['height']))\n        let totalHeight = item.isActive ? titleHeight + sum(getStyle(childNodes[1], ['height', 'marginTop'])) : titleHeight\n        totalHeight += rootPadding\n        current.style.height = totalHeight + 'px'\n      }\n    }\n  }\n\n  const sum = arr => arr.reduce((acc, item) => acc += item ,0)\n\n  const getStyle = (node, styleList) => styleList.map(style => Number(getComputedStyle(node)[style].replace('px', '')))\n\n  return (\n    <div className={ styles.root + (item.isActive ? ' ' + styles.isActive : '') }\n         custom-id={ index }\n         ref={ ref }>\n      <div className={ styles.title } custom-id={ index }>{ item.title }\n      { index }\n        <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M-1.0334e-06 11.8207L1.39309 13.2138L8 6.60691L1.39309 -5.77595e-07L-1.21788e-07 1.39309L5.21382 6.60691L-1.0334e-06 11.8207Z\" fill=\"black\"/>\n        </svg>\n\n      </div>\n      <div className={ styles.description } custom-id={ index }>{ item.description }</div>\n    </div>\n  )\n}\n\nSlot.propTypes = {\n  item: PropTypes.object,\n}\n\nexport default Slot\n"]},"metadata":{},"sourceType":"module"}