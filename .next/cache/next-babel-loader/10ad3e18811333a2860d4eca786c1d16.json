{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { changeWindowSize } from \"../store/window/actions\";\n\nconst Root = ({\n  children,\n  changeWindowSize,\n  size\n}) => {\n  useEffect(() => {\n    changeWindowSize();\n    console.log(size);\n  }, []);\n  return Object.keys(size).length > 0 ? {\n    children\n  } : null;\n};\n\nconst mapStateToProps = state => {\n  return {\n    size: state.window.size\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  changeWindowSize: bindActionCreators(changeWindowSize, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Root);","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Root.js"],"names":["React","useEffect","bindActionCreators","connect","changeWindowSize","Root","children","size","console","log","Object","keys","length","mapStateToProps","state","window","mapDispatchToProps","dispatch"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYF,EAAAA,gBAAZ;AAA8BG,EAAAA;AAA9B,CAAD,KAA0C;AAErDN,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,gBAAgB;AAChBI,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAED,GAJQ,EAIN,EAJM,CAAT;AAKA,SAAOG,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,GAA2B,CAA3B,GAA+B;AAAEN,IAAAA;AAAF,GAA/B,GAA8C,IAArD;AACD,CARD;;AAWA,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,IAAI,EAAEO,KAAK,CAACC,MAAN,CAAaR;AADd,GAAP;AAGD,CAJD;;AAMA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,gBAAgB,EAAEF,kBAAkB,CAACE,gBAAD,EAAmBa,QAAnB;AADE,CAAL,CAAnC;;AAIA,eAAed,OAAO,CAACU,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CX,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { changeWindowSize } from \"../store/window/actions\"\n\nconst Root = ({ children, changeWindowSize, size }) => {\n\n  useEffect(() => {\n    changeWindowSize()\n    console.log(size)\n\n  }, [])\n  return Object.keys(size).length > 0 ? { children } : null\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    size: state.window.size\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  changeWindowSize: bindActionCreators(changeWindowSize, dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Root)\n"]},"metadata":{},"sourceType":"module"}