{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Slot from \"./Slot/Slot\";\nimport styles from './DropDown.module.scss';\n\nconst DropDown = ({\n  items,\n  isMoreColumn,\n  onUpdate\n}) => {\n  const {\n    0: dropDownItems,\n    1: setDropDownItems\n  } = useState([]);\n  useEffect(() => {\n    setDropDownItems(items.slice());\n  }, [items]);\n\n  const handleClick = async ({\n    target\n  }) => {\n    const id = await getCustomId(target);\n\n    if (id) {\n      let copyItems = dropDownItems.slice();\n      copyItems[id].isActive = !copyItems[id].isActive;\n      onUpdate(copyItems);\n    }\n  };\n\n  const getCustomId = target => {\n    if (target.hasAttribute('custom-id')) {\n      return target.getAttribute('custom-id');\n    } else {\n      if (!target.parentNode) return;else return getCustomId(target.parentNode);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.root,\n    onClick: handleClick\n  }, __jsx(\"div\", {\n    className: styles.itemContainer,\n    style: {\n      marginRight: isMoreColumn ? '28px' : ''\n    }\n  }, items.slice(0, isMoreColumn ? Math.ceil(items.length / 2) : items.length).map((item, index) => __jsx(\"div\", {\n    key: index,\n    className: styles.item\n  }, __jsx(Slot, {\n    item: item,\n    index: index\n  })))), isMoreColumn ? __jsx(\"div\", {\n    className: styles.itemContainer\n  }, items.slice(Math.ceil(items.length / 2), items.length).map((item, index) => {\n    index += Math.ceil(items.length / 2);\n    return __jsx(\"div\", {\n      key: index,\n      className: styles.item\n    }, __jsx(Slot, {\n      item: item,\n      index: index\n    }));\n  })) : null);\n};\n\nexport default DropDown;","map":null,"metadata":{},"sourceType":"module"}