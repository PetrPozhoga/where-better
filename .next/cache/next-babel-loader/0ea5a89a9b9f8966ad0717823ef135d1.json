{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nexport default function Handle({\n  domain: [min, max],\n  handle: {\n    id,\n    value,\n    percent\n  },\n  disabled,\n  getHandleProps\n}) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", _extends({\n    style: {\n      left: `${percent}%`,\n      position: \"absolute\",\n      transform: \"translate(-50%, -50%)\",\n      WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n      zIndex: 5,\n      width: 28,\n      height: 42,\n      cursor: \"pointer\",\n      backgroundColor: \"none\"\n    }\n  }, getHandleProps(id))), __jsx(\"div\", {\n    role: \"slider\",\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value,\n    style: {\n      left: `${percent}%`,\n      position: \"absolute\",\n      transform: \"translate(-50%, -50%)\",\n      zIndex: 2,\n      width: 20,\n      height: 20,\n      borderRadius: \"50%\",\n      backgroundColor: disabled ? \"#4EBF7B\" : \"#4EBF7B\"\n    }\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}