{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { changeWindowSize as _changeWindowSize } from \"../store/window/actions\";\n\nvar Root = function Root(_ref) {\n  var children = _ref.children,\n      changeWindowSize = _ref.changeWindowSize,\n      size = _ref.size;\n  useEffect(function () {\n    changeWindowSize();\n    window.addEventListener('resize', function () {\n      console.log(window.innerWidth);\n\n      if (size.windowInnerWidth !== window.innerWidth) {\n        changeWindowSize();\n      }\n    });\n  }, []);\n  return __jsx(\"div\", {\n    id: \"App\"\n  }, children);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    size: state.window.size\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeWindowSize: function changeWindowSize() {\n      return dispatch(_changeWindowSize());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Root);","map":null,"metadata":{},"sourceType":"module"}