{"ast":null,"code":"var _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/SlideShow/SlideShow.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './SlideShow.module.scss';\n\nconst SlideShow = ({\n  children = [],\n  showElements,\n  animationTime = 300,\n  classNameContainer,\n  slideHeight,\n  idRoot,\n  paddingLeft,\n  paddingRight,\n  marginRight\n}) => {\n  const {\n    0: start,\n    1: setStart\n  } = useState(null);\n  const {\n    0: rootElement,\n    1: setRootElement\n  } = useState({});\n  const {\n    0: wrapElement,\n    1: setWrapElement\n  } = useState({});\n  const {\n    0: containerElement,\n    1: setContainerElement\n  } = useState({});\n  const {\n    0: copyChildren,\n    1: setCopyChildren\n  } = useState([]);\n  const {\n    0: slideOption,\n    1: setSlideOption\n  } = useState({\n    totalSlide: children.length,\n    currentIndex: 0,\n    currentElementIndex: 0\n  });\n  const {\n    0: slideIsOver,\n    1: setSlideIsOver\n  } = useState(false);\n  useEffect(() => {\n    setRootElement(document.getElementById(styles.root + idRoot));\n  }, [rootElement]);\n  useEffect(() => {\n    setWrapElement(document.querySelector('.' + classNameContainer));\n  }, [wrapElement]);\n  useEffect(() => {\n    let container = document.querySelector('.' + styles.container + classNameContainer);\n    setContainerElement(container); //container.style.transition = 'left ease ' + animationTime + 'ms'\n\n    console.log('left linear ' + animationTime + 'ms');\n    let slideItem = document.querySelectorAll('.' + styles.container + classNameContainer + '>div');\n    slideItem.forEach((item, index) => {\n      console.log((wrapElement.offsetWidth - (showElements - 1) * marginRight) / showElements);\n      item.style.width = (wrapElement.offsetWidth - (showElements - 1) * (marginRight || 0)) / showElements + 'px';\n      item.style.marginRight = (marginRight || 0) + 'px';\n    });\n  }, [containerElement]);\n  useEffect(() => {\n    setCopyChildren(children.slice());\n  }, [children]);\n\n  const changeSlide = slide => {\n    if (slideIsOver) return false;else {\n      setSlideIsOver(true);\n      let newChildrenArr = [];\n      let currentIndex = slideOption.currentIndex + slide;\n      let currentElementIndex = slideOption.currentElementIndex + slide;\n      currentElementIndex = currentElementIndex < 0 ? copyChildren.length - 1 : currentElementIndex > copyChildren.length - 1 ? 0 : currentElementIndex;\n\n      if (slide === 1) {\n        let firstChild = copyChildren[0];\n        newChildrenArr = [...copyChildren.slice(1, copyChildren.length), firstChild];\n      } else {\n        let lastChild = copyChildren[copyChildren.length - 1];\n        newChildrenArr = [lastChild, ...copyChildren.slice(0, copyChildren.length - 1)];\n      }\n\n      setSlideOption(_objectSpread({}, slideOption, {\n        currentIndex,\n        currentElementIndex\n      }));\n      setTimeout(() => {\n        setCopyChildren(newChildrenArr);\n        document.querySelector('.' + styles.container + classNameContainer).style.marginLeft = currentIndex * (wrapElement.offsetWidth / showElements) + 'px';\n      }, slide === 1 ? animationTime : 0);\n      setTimeout(() => {\n        setSlideIsOver(false);\n      }, animationTime);\n      setStart(Date.now());\n    }\n  };\n\n  const setCurrentSlide = index => {\n    if (slideOption.currentElementIndex === index) return;else {\n      let container = document.querySelector('.' + styles.container + classNameContainer);\n      container.style.transition = 'none';\n      let currentIndex = index - slideOption.currentElementIndex;\n      let newChildrenArr = [];\n\n      if (currentIndex >= 1) {\n        let firstChild = copyChildren.slice(0, Math.abs(currentIndex));\n        console.log(firstChild);\n        newChildrenArr = [...copyChildren.slice(Math.abs(currentIndex), copyChildren.length), ...firstChild];\n      } else {\n        let lastChild = copyChildren.slice(copyChildren.length - Math.abs(currentIndex), copyChildren.length);\n        copyChildren.splice(copyChildren.length - Math.abs(currentIndex), lastChild.length);\n        newChildrenArr = [...lastChild, ...copyChildren];\n      }\n\n      setSlideOption(_objectSpread({}, slideOption, {\n        currentIndex: slideOption.currentIndex + currentIndex,\n        currentElementIndex: index\n      }));\n      setCopyChildren(newChildrenArr);\n      container.style.marginLeft = (slideOption.currentIndex + currentIndex) * (wrapElement.offsetWidth / showElements) + 'px';\n      setTimeout(() => container.style.transition = 'left ease ' + animationTime + 'ms', animationTime);\n    }\n  };\n\n  useEffect(() => {\n    if (start) startAnim();\n  }, [start]);\n\n  const startAnim = () => {\n    let timer = setInterval(function () {\n      // сколько времени прошло с начала анимации?\n      let timePassed = Date.now() - start;\n\n      if (timePassed >= animationTime) {\n        console.log(timePassed, animationTime);\n        clearInterval(timer); // закончить анимацию через 2 секунды\n\n        setStart(null);\n        return;\n      } // отрисовать анимацию на момент timePassed, прошедший с начала анимации\n\n\n      draw(timePassed);\n    }, 60);\n  }; // в то время как timePassed идёт от 0 до 2000\n  // left изменяет значение от 0px до 400px\n\n\n  function draw(timePassed, node) {\n    let left = -(slideOption.currentIndex * (wrapElement.offsetWidth / showElements));\n    document.querySelector('.' + styles.container + classNameContainer).style.left = timePassed / (animationTime / left) + 'px';\n  }\n\n  return __jsx(\"div\", {\n    className: styles.root,\n    id: styles.root + idRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: slideHeight,\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: rootElement.offsetWidth - (paddingLeft || 0) - (paddingRight || 0) + 'px'\n    },\n    className: styles.wrapp + ' ' + classNameContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.container + ' ' + styles.container + classNameContainer,\n    style: {\n      //left: -(slideOption.currentIndex * (wrapElement.offsetWidth / showElements)) + 'px',\n      width: wrapElement && (wrapElement.offsetWidth + (marginRight || 0) * (showElements - 1)) / showElements * copyChildren.length + 'px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, copyChildren.map(item => item))), __jsx(\"div\", {\n    className: styles.arrowControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, __jsx(\"svg\", {\n    onClick: changeSlide.bind(null, 1),\n    width: \"50\",\n    height: \"50\",\n    viewBox: \"0 0 50 50\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, __jsx(\"circle\", {\n    cx: \"25\",\n    cy: \"25\",\n    r: \"25\",\n    fill: \"#4D3E3D\",\n    fillOpacity: \"0.5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M31.0722 36.7022L27.9061 39.8683L12.8904 24.8526L27.9061 9.83691L31.0722 13.003L19.2226 24.8526L31.0722 36.7022Z\",\n    fill: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  })), __jsx(\"svg\", {\n    width: \"50\",\n    height: \"50\",\n    viewBox: \"0 0 50 50\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    onClick: changeSlide.bind(null, 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, __jsx(\"circle\", {\n    r: \"25\",\n    transform: \"matrix(-1 0 0 1 25 25)\",\n    fill: \"#4D3E3D\",\n    fillOpacity: \"0.5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M18.9277 36.7022L22.0938 39.8683L37.1096 24.8526L22.0938 9.83691L18.9277 13.003L30.7773 24.8526L18.9277 36.7022Z\",\n    fill: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  })))), __jsx(\"div\", {\n    className: styles.circleControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, copyChildren.map((item, key) => __jsx(\"div\", {\n    key: key + item,\n    onClick: setCurrentSlide.bind(null, key),\n    className: slideOption.currentElementIndex === key ? styles.activeCircle : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default SlideShow;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/SlideShow/SlideShow.js"],"names":["React","useState","useEffect","styles","SlideShow","children","showElements","animationTime","classNameContainer","slideHeight","idRoot","paddingLeft","paddingRight","marginRight","start","setStart","rootElement","setRootElement","wrapElement","setWrapElement","containerElement","setContainerElement","copyChildren","setCopyChildren","slideOption","setSlideOption","totalSlide","length","currentIndex","currentElementIndex","slideIsOver","setSlideIsOver","document","getElementById","root","querySelector","container","console","log","slideItem","querySelectorAll","forEach","item","index","offsetWidth","style","width","slice","changeSlide","slide","newChildrenArr","firstChild","lastChild","setTimeout","marginLeft","Date","now","setCurrentSlide","transition","Math","abs","splice","startAnim","timer","setInterval","timePassed","clearInterval","draw","node","left","height","position","wrapp","map","arrowControl","bind","circleControl","key","activeCircle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styles from './SlideShow.module.scss'\n\nconst SlideShow = ({ children = [], showElements, animationTime = 300, classNameContainer, slideHeight, idRoot, paddingLeft, paddingRight, marginRight }) => {\n\n  const [ start, setStart ] = useState(null)\n\n\n  const [ rootElement, setRootElement ] = useState({})\n  const [ wrapElement, setWrapElement ] = useState({})\n  const [ containerElement, setContainerElement ] = useState({})\n  const [ copyChildren, setCopyChildren ] = useState([])\n  const [ slideOption, setSlideOption ] = useState({\n    totalSlide: children.length,\n    currentIndex: 0,\n    currentElementIndex: 0\n  })\n  const [ slideIsOver, setSlideIsOver ] = useState(false)\n\n  useEffect(() => {\n    setRootElement(document.getElementById(styles.root + idRoot))\n  }, [ rootElement ])\n\n  useEffect(() => {\n    setWrapElement(document.querySelector('.' + classNameContainer))\n  }, [ wrapElement ])\n\n  useEffect(() => {\n    let container = document.querySelector('.' + styles.container + classNameContainer)\n    setContainerElement(container)\n    //container.style.transition = 'left ease ' + animationTime + 'ms'\n    console.log('left linear ' + animationTime + 'ms')\n    let slideItem = document.querySelectorAll('.' + styles.container + classNameContainer + '>div')\n    slideItem.forEach((item, index) => {\n      console.log(((wrapElement.offsetWidth - ((showElements - 1) * marginRight)) / (showElements)))\n      item.style.width = ((wrapElement.offsetWidth - ((showElements - 1) * (marginRight || 0))) / (showElements)) + 'px'\n      item.style.marginRight = (marginRight || 0) + 'px'\n    })\n\n  }, [ containerElement ])\n\n  useEffect(() => {\n    setCopyChildren(children.slice())\n  }, [ children ])\n\n  const changeSlide = slide => {\n    if (slideIsOver) return false\n    else {\n      setSlideIsOver(true)\n      let newChildrenArr = []\n      let currentIndex = slideOption.currentIndex + (slide)\n      let currentElementIndex = slideOption.currentElementIndex + (slide)\n      currentElementIndex = currentElementIndex < 0 ? copyChildren.length - 1 : currentElementIndex > (copyChildren.length - 1) ? 0 : currentElementIndex\n\n      if (slide === 1) {\n        let firstChild = copyChildren[ 0 ]\n        newChildrenArr = [ ...copyChildren.slice(1, copyChildren.length), firstChild ]\n      }\n      else {\n        let lastChild = copyChildren[ copyChildren.length - 1 ]\n        newChildrenArr = [ lastChild, ...copyChildren.slice(0, copyChildren.length - 1) ]\n      }\n\n      setSlideOption({ ...slideOption, currentIndex, currentElementIndex })\n\n      setTimeout(() => {\n        setCopyChildren(newChildrenArr)\n        document.querySelector('.' + styles.container + classNameContainer).style.marginLeft = (currentIndex * (wrapElement.offsetWidth / showElements) + 'px')\n      }, slide === 1 ? animationTime : 0)\n\n      setTimeout(() => {\n        setSlideIsOver(false)\n      }, animationTime)\n\n      setStart(Date.now())\n    }\n  }\n\n  const setCurrentSlide = index => {\n    if (slideOption.currentElementIndex === index) return\n    else {\n      let container = document.querySelector('.' + styles.container + classNameContainer)\n      container.style.transition = 'none'\n      let currentIndex = index - slideOption.currentElementIndex\n\n      let newChildrenArr = []\n      if (currentIndex >= 1) {\n        let firstChild = copyChildren.slice(0, Math.abs(currentIndex))\n        console.log(firstChild)\n        newChildrenArr = [ ...copyChildren.slice(Math.abs(currentIndex), copyChildren.length), ...firstChild ]\n      }\n      else {\n        let lastChild = copyChildren.slice(copyChildren.length - Math.abs(currentIndex), copyChildren.length)\n        copyChildren.splice(copyChildren.length - Math.abs(currentIndex), lastChild.length)\n        newChildrenArr = [ ...lastChild, ...copyChildren ]\n      }\n\n\n      setSlideOption({\n        ...slideOption,\n        currentIndex: slideOption.currentIndex + (currentIndex),\n        currentElementIndex: index\n      })\n\n      setCopyChildren(newChildrenArr)\n      container.style.marginLeft = ((slideOption.currentIndex + (currentIndex)) * (wrapElement.offsetWidth / showElements) + 'px')\n\n      setTimeout(() => container.style.transition = 'left ease ' + animationTime + 'ms', animationTime)\n    }\n  }\n\n  useEffect(() => {\n    if (start) startAnim()\n  }, [start])\n\n  const startAnim = () => {\n    let timer = setInterval(function () {\n      // сколько времени прошло с начала анимации?\n      let timePassed = Date.now() - start;\n\n      if (timePassed >= animationTime) {\n        console.log(timePassed, animationTime)\n        clearInterval(timer); // закончить анимацию через 2 секунды\n        setStart(null)\n        return;\n      }\n\n      // отрисовать анимацию на момент timePassed, прошедший с начала анимации\n      draw(timePassed);\n\n    }, 60);\n  }\n\n// в то время как timePassed идёт от 0 до 2000\n// left изменяет значение от 0px до 400px\n  function draw(timePassed, node) {\n    let left = -(slideOption.currentIndex * (wrapElement.offsetWidth / showElements))\n    document.querySelector('.' + styles.container + classNameContainer).style.left = timePassed / (animationTime / left) + 'px';\n  }\n\n  return (\n    <div className={ styles.root } id={ styles.root + idRoot }>\n      <div style={ { height: slideHeight, position: 'relative' } }>\n        <div\n          style={ {\n            width: rootElement.offsetWidth - (paddingLeft || 0) - (paddingRight || 0) + 'px'\n          } }\n          className={ styles.wrapp + ' ' + classNameContainer }>\n          <div className={ styles.container + ' ' + styles.container + classNameContainer }\n               style={ {\n                 //left: -(slideOption.currentIndex * (wrapElement.offsetWidth / showElements)) + 'px',\n                 width: wrapElement &&\n                   (\n                     (wrapElement.offsetWidth + ((marginRight || 0) * (showElements - 1)))\n                     / showElements)\n                   * copyChildren.length + 'px'\n               } }>\n            { copyChildren.map(item => item) }\n          </div>\n        </div>\n        <div className={ styles.arrowControl }>\n          <svg onClick={ changeSlide.bind(null, 1) } width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\"\n               xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"25\" cy=\"25\" r=\"25\" fill=\"#4D3E3D\" fillOpacity=\"0.5\"/>\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                  d=\"M31.0722 36.7022L27.9061 39.8683L12.8904 24.8526L27.9061 9.83691L31.0722 13.003L19.2226 24.8526L31.0722 36.7022Z\"\n                  fill=\"white\"/>\n          </svg>\n\n          <svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n               onClick={ changeSlide.bind(null, 1) }>\n            <circle r=\"25\" transform=\"matrix(-1 0 0 1 25 25)\" fill=\"#4D3E3D\" fillOpacity=\"0.5\"/>\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                  d=\"M18.9277 36.7022L22.0938 39.8683L37.1096 24.8526L22.0938 9.83691L18.9277 13.003L30.7773 24.8526L18.9277 36.7022Z\"\n                  fill=\"white\"/>\n          </svg>\n        </div>\n      </div>\n      <div className={ styles.circleControl }>\n        { copyChildren.map((item, key) =>\n          <div key={ key + item }\n               onClick={ setCurrentSlide.bind(null, key) }\n               className={ slideOption.currentElementIndex === key ? styles.activeCircle : '' }/>\n        ) }\n      </div>\n    </div>\n  )\n}\n\nexport default SlideShow\n"]},"metadata":{},"sourceType":"module"}