{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Slot from \"./Slot/Slot\";\nimport styles from './DropDown.module.scss';\n\nvar DropDown = function DropDown(_ref) {\n  var items = _ref.items,\n      isMoreColumn = _ref.isMoreColumn,\n      onUpdate = _ref.onUpdate;\n\n  var _useState = useState([]),\n      dropDownItems = _useState[0],\n      setDropDownItems = _useState[1];\n\n  useEffect(function () {\n    setDropDownItems(items.slice());\n  }, [items]);\n\n  var handleClick = function handleClick(_ref2) {\n    var target, id, copyItems;\n    return _regeneratorRuntime.async(function handleClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            target = _ref2.target;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getCustomId(target));\n\n          case 3:\n            id = _context.sent;\n\n            if (id) {\n              copyItems = dropDownItems.slice();\n              copyItems[id].isActive = !copyItems[id].isActive;\n              onUpdate(copyItems);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getCustomId = function getCustomId(target) {\n    if (target.hasAttribute('custom-id')) {\n      return target.getAttribute('custom-id');\n    } else {\n      if (!target.parentNode) return;else return getCustomId(target.parentNode);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.root,\n    onClick: handleClick\n  }, __jsx(\"div\", {\n    className: styles.itemContainer,\n    style: {\n      marginRight: isMoreColumn ? '28px' : ''\n    }\n  }, items.slice(0, isMoreColumn ? Math.ceil(items.length / 2) : items.length).map(function (item, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: styles.item\n    }, __jsx(Slot, {\n      item: item,\n      index: index\n    }));\n  })), isMoreColumn ? __jsx(\"div\", {\n    className: styles.itemContainer\n  }, items.slice(Math.ceil(items.length / 2), items.length).map(function (item, index) {\n    index += Math.ceil(items.length / 2);\n    return __jsx(\"div\", {\n      key: index,\n      className: styles.item\n    }, __jsx(Slot, {\n      item: item,\n      index: index\n    }));\n  })) : null);\n};\n\nexport default DropDown;","map":null,"metadata":{},"sourceType":"module"}