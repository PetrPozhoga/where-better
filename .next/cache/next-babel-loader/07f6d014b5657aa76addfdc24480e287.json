{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/SlideShow/SlideShow.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './SlideShow.module.scss';\n\nvar SlideShow = function SlideShow(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? [] : _ref$children,\n      showElements = _ref.showElements,\n      _ref$animationTime = _ref.animationTime,\n      animationTime = _ref$animationTime === void 0 ? 300 : _ref$animationTime,\n      classNameContainer = _ref.classNameContainer,\n      slideHeight = _ref.slideHeight,\n      idRoot = _ref.idRoot,\n      paddingLeft = _ref.paddingLeft,\n      paddingRight = _ref.paddingRight,\n      marginRight = _ref.marginRight,\n      windowInnerWidth = _ref.windowInnerWidth;\n\n  var _useState = useState({}),\n      rootElement = _useState[0],\n      setRootElement = _useState[1];\n\n  var _useState2 = useState({}),\n      wrapElement = _useState2[0],\n      setWrapElement = _useState2[1];\n\n  var _useState3 = useState({}),\n      containerElement = _useState3[0],\n      setContainerElement = _useState3[1];\n\n  var _useState4 = useState([]),\n      copyChildren = _useState4[0],\n      setCopyChildren = _useState4[1];\n\n  var _useState5 = useState({\n    totalSlide: children.length,\n    currentIndex: 0,\n    currentElementIndex: 0\n  }),\n      slideOption = _useState5[0],\n      setSlideOption = _useState5[1];\n\n  var _useState6 = useState(false),\n      slideIsOver = _useState6[0],\n      setSlideIsOver = _useState6[1];\n\n  useEffect(function () {\n    setRootElement(document.getElementById(styles.root + idRoot));\n  }, [rootElement]);\n  useEffect(function () {\n    setWrapElement(document.querySelector('.' + classNameContainer));\n  }, [wrapElement]);\n  useEffect(function () {\n    var container = document.querySelector('.' + styles.container + classNameContainer);\n    setContainerElement(container);\n    container.style.transition = 'left ease ' + animationTime + 'ms';\n    console.log('left linear ' + animationTime + 'ms');\n    var slideItem = document.querySelectorAll('.' + styles.container + classNameContainer + '>div');\n    slideItem.forEach(function (item, index) {\n      console.log((wrapElement.offsetWidth - (showElements - 1) * marginRight) / showElements);\n      item.style.width = (wrapElement.offsetWidth - (showElements - 1) * (marginRight || 0)) / showElements + 'px';\n      item.style.marginRight = (marginRight || 0) + 'px';\n    });\n  }, [containerElement, windowInnerWidth]);\n  useEffect(function () {\n    document.querySelector('.' + styles.container + classNameContainer).style.marginLeft = slideOption.currentIndex * (wrapElement.offsetWidth / showElements) + 'px';\n  }, [windowInnerWidth]);\n  useEffect(function () {\n    console.log(children);\n    setCopyChildren(children.concat());\n  }, [children]);\n\n  var changeSlide = function changeSlide(slide) {\n    if (slideIsOver) return false;else {\n      setSlideIsOver(true);\n      var newChildrenArr = [];\n      var currentIndex = slideOption.currentIndex + slide;\n      var currentElementIndex = slideOption.currentElementIndex + slide;\n      currentElementIndex = currentElementIndex < 0 ? copyChildren.length - 1 : currentElementIndex > copyChildren.length - 1 ? 0 : currentElementIndex;\n\n      if (slide === 1) {\n        var firstChild = copyChildren[0];\n        newChildrenArr = [].concat(_toConsumableArray(copyChildren.slice(1, copyChildren.length)), [firstChild]);\n      } else {\n        var lastChild = copyChildren[copyChildren.length - 1];\n        newChildrenArr = [lastChild].concat(_toConsumableArray(copyChildren.slice(0, copyChildren.length - 1)));\n      }\n\n      setSlideOption(_objectSpread({}, slideOption, {\n        currentIndex: currentIndex,\n        currentElementIndex: currentElementIndex\n      }));\n      setTimeout(function () {\n        setCopyChildren(newChildrenArr);\n        document.querySelector('.' + styles.container + classNameContainer).style.marginLeft = currentIndex * (wrapElement.offsetWidth / showElements) + 'px';\n      }, slide === 1 ? animationTime : 0);\n      setTimeout(function () {\n        setSlideIsOver(false);\n      }, animationTime);\n    }\n  };\n\n  var setCurrentSlide = function setCurrentSlide(index) {\n    if (slideOption.currentElementIndex === index) return;else {\n      var container = document.querySelector('.' + styles.container + classNameContainer);\n      container.style.transition = 'none';\n      var currentIndex = index - slideOption.currentElementIndex;\n      var newChildrenArr = [];\n\n      if (currentIndex >= 1) {\n        var firstChild = copyChildren.slice(0, Math.abs(currentIndex));\n        console.log(firstChild);\n        newChildrenArr = [].concat(_toConsumableArray(copyChildren.slice(Math.abs(currentIndex), copyChildren.length)), _toConsumableArray(firstChild));\n      } else {\n        var lastChild = copyChildren.slice(copyChildren.length - Math.abs(currentIndex), copyChildren.length);\n        copyChildren.splice(copyChildren.length - Math.abs(currentIndex), lastChild.length);\n        newChildrenArr = [].concat(_toConsumableArray(lastChild), _toConsumableArray(copyChildren));\n      }\n\n      setSlideOption(_objectSpread({}, slideOption, {\n        currentIndex: slideOption.currentIndex + currentIndex,\n        currentElementIndex: index\n      }));\n      setCopyChildren(newChildrenArr);\n      container.style.marginLeft = (slideOption.currentIndex + currentIndex) * (wrapElement.offsetWidth / showElements) + 'px';\n      setTimeout(function () {\n        return container.style.transition = 'left ease ' + animationTime + 'ms';\n      }, animationTime);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.root,\n    id: styles.root + idRoot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: slideHeight,\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: rootElement.offsetWidth - (paddingLeft || 0) - (paddingRight || 0) + 'px'\n    },\n    className: styles.wrapp + ' ' + classNameContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.container + ' ' + styles.container + classNameContainer,\n    style: {\n      left: -(slideOption.currentIndex * (wrapElement.offsetWidth / showElements)) + 'px',\n      width: wrapElement && (wrapElement.offsetWidth + (marginRight || 0) * (showElements - 1)) / showElements * copyChildren.length + 'px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, copyChildren.map(function (item) {\n    return item;\n  }))), __jsx(\"div\", {\n    className: styles.arrowControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(\"svg\", {\n    onClick: changeSlide.bind(null, 1),\n    width: \"50\",\n    height: \"50\",\n    viewBox: \"0 0 50 50\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, __jsx(\"circle\", {\n    cx: \"25\",\n    cy: \"25\",\n    r: \"25\",\n    fill: \"#4D3E3D\",\n    fillOpacity: \"0.5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M31.0722 36.7022L27.9061 39.8683L12.8904 24.8526L27.9061 9.83691L31.0722 13.003L19.2226 24.8526L31.0722 36.7022Z\",\n    fill: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), __jsx(\"svg\", {\n    width: \"50\",\n    height: \"50\",\n    viewBox: \"0 0 50 50\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    onClick: changeSlide.bind(null, 1),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, __jsx(\"circle\", {\n    r: \"25\",\n    transform: \"matrix(-1 0 0 1 25 25)\",\n    fill: \"#4D3E3D\",\n    fillOpacity: \"0.5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M18.9277 36.7022L22.0938 39.8683L37.1096 24.8526L22.0938 9.83691L18.9277 13.003L30.7773 24.8526L18.9277 36.7022Z\",\n    fill: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  })))), __jsx(\"div\", {\n    className: styles.circleControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, copyChildren.map(function (item, key) {\n    return __jsx(\"div\", {\n      key: key + item,\n      onClick: setCurrentSlide.bind(null, key),\n      className: slideOption.currentElementIndex === key ? styles.activeCircle : '',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\nexport default SlideShow;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/SlideShow/SlideShow.js"],"names":["React","useState","useEffect","styles","SlideShow","children","showElements","animationTime","classNameContainer","slideHeight","idRoot","paddingLeft","paddingRight","marginRight","windowInnerWidth","rootElement","setRootElement","wrapElement","setWrapElement","containerElement","setContainerElement","copyChildren","setCopyChildren","totalSlide","length","currentIndex","currentElementIndex","slideOption","setSlideOption","slideIsOver","setSlideIsOver","document","getElementById","root","querySelector","container","style","transition","console","log","slideItem","querySelectorAll","forEach","item","index","offsetWidth","width","marginLeft","concat","changeSlide","slide","newChildrenArr","firstChild","slice","lastChild","setTimeout","setCurrentSlide","Math","abs","splice","height","position","wrapp","left","map","arrowControl","bind","circleControl","key","activeCircle"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA6J;AAAA,2BAA1JC,QAA0J;AAAA,MAA1JA,QAA0J,8BAA/I,EAA+I;AAAA,MAA3IC,YAA2I,QAA3IA,YAA2I;AAAA,gCAA7HC,aAA6H;AAAA,MAA7HA,aAA6H,mCAA7G,GAA6G;AAAA,MAAxGC,kBAAwG,QAAxGA,kBAAwG;AAAA,MAApFC,WAAoF,QAApFA,WAAoF;AAAA,MAAvEC,MAAuE,QAAvEA,MAAuE;AAAA,MAA/DC,WAA+D,QAA/DA,WAA+D;AAAA,MAAlDC,YAAkD,QAAlDA,YAAkD;AAAA,MAApCC,WAAoC,QAApCA,WAAoC;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;;AAAA,kBAErIb,QAAQ,CAAC,EAAD,CAF6H;AAAA,MAErKc,WAFqK;AAAA,MAExJC,cAFwJ;;AAAA,mBAGrIf,QAAQ,CAAC,EAAD,CAH6H;AAAA,MAGrKgB,WAHqK;AAAA,MAGxJC,cAHwJ;;AAAA,mBAI3HjB,QAAQ,CAAC,EAAD,CAJmH;AAAA,MAIrKkB,gBAJqK;AAAA,MAInJC,mBAJmJ;;AAAA,mBAKnInB,QAAQ,CAAC,EAAD,CAL2H;AAAA,MAKrKoB,YALqK;AAAA,MAKvJC,eALuJ;;AAAA,mBAMrIrB,QAAQ,CAAC;AAC/CsB,IAAAA,UAAU,EAAElB,QAAQ,CAACmB,MAD0B;AAE/CC,IAAAA,YAAY,EAAE,CAFiC;AAG/CC,IAAAA,mBAAmB,EAAE;AAH0B,GAAD,CAN6H;AAAA,MAMrKC,WANqK;AAAA,MAMxJC,cANwJ;;AAAA,mBAWrI3B,QAAQ,CAAC,KAAD,CAX6H;AAAA,MAWrK4B,WAXqK;AAAA,MAWxJC,cAXwJ;;AAa7K5B,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,cAAc,CAACe,QAAQ,CAACC,cAAT,CAAwB7B,MAAM,CAAC8B,IAAP,GAAcvB,MAAtC,CAAD,CAAd;AACD,GAFQ,EAEN,CAAEK,WAAF,CAFM,CAAT;AAIAb,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,cAAc,CAACa,QAAQ,CAACG,aAAT,CAAuB,MAAM1B,kBAA7B,CAAD,CAAd;AACD,GAFQ,EAEN,CAAES,WAAF,CAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiC,SAAS,GAAGJ,QAAQ,CAACG,aAAT,CAAuB,MAAM/B,MAAM,CAACgC,SAAb,GAAyB3B,kBAAhD,CAAhB;AACAY,IAAAA,mBAAmB,CAACe,SAAD,CAAnB;AACAA,IAAAA,SAAS,CAACC,KAAV,CAAgBC,UAAhB,GAA6B,eAAe9B,aAAf,GAA+B,IAA5D;AACA+B,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBhC,aAAjB,GAAiC,IAA7C;AACA,QAAIiC,SAAS,GAAGT,QAAQ,CAACU,gBAAT,CAA0B,MAAMtC,MAAM,CAACgC,SAAb,GAAyB3B,kBAAzB,GAA8C,MAAxE,CAAhB;AACAgC,IAAAA,SAAS,CAACE,OAAV,CAAkB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACjCN,MAAAA,OAAO,CAACC,GAAR,CAAa,CAACtB,WAAW,CAAC4B,WAAZ,GAA2B,CAACvC,YAAY,GAAG,CAAhB,IAAqBO,WAAjD,IAAkEP,YAA/E;AACAqC,MAAAA,IAAI,CAACP,KAAL,CAAWU,KAAX,GAAoB,CAAC7B,WAAW,CAAC4B,WAAZ,GAA2B,CAACvC,YAAY,GAAG,CAAhB,KAAsBO,WAAW,IAAI,CAArC,CAA5B,IAAyEP,YAA1E,GAA2F,IAA9G;AACAqC,MAAAA,IAAI,CAACP,KAAL,CAAWvB,WAAX,GAAyB,CAACA,WAAW,IAAI,CAAhB,IAAqB,IAA9C;AACD,KAJD;AAMD,GAZQ,EAYN,CAAEM,gBAAF,EAAoBL,gBAApB,CAZM,CAAT;AAcAZ,EAAAA,SAAS,CAAC,YAAM;AACd6B,IAAAA,QAAQ,CAACG,aAAT,CAAuB,MAAM/B,MAAM,CAACgC,SAAb,GAAyB3B,kBAAhD,EAAoE4B,KAApE,CAA0EW,UAA1E,GAAwFpB,WAAW,CAACF,YAAZ,IAA4BR,WAAW,CAAC4B,WAAZ,GAA0BvC,YAAtD,IAAsE,IAA9J;AACD,GAFQ,EAEN,CAACQ,gBAAD,CAFM,CAAT;AAIAZ,EAAAA,SAAS,CAAC,YAAM;AACdoC,IAAAA,OAAO,CAACC,GAAR,CAAYlC,QAAZ;AACAiB,IAAAA,eAAe,CAACjB,QAAQ,CAAC2C,MAAT,EAAD,CAAf;AACD,GAHQ,EAGN,CAAE3C,QAAF,CAHM,CAAT;;AAKA,MAAM4C,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,QAAIrB,WAAJ,EAAiB,OAAO,KAAP,CAAjB,KACK;AACHC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,UAAIqB,cAAc,GAAG,EAArB;AACA,UAAI1B,YAAY,GAAGE,WAAW,CAACF,YAAZ,GAA4ByB,KAA/C;AACA,UAAIxB,mBAAmB,GAAGC,WAAW,CAACD,mBAAZ,GAAmCwB,KAA7D;AACAxB,MAAAA,mBAAmB,GAAGA,mBAAmB,GAAG,CAAtB,GAA0BL,YAAY,CAACG,MAAb,GAAsB,CAAhD,GAAoDE,mBAAmB,GAAIL,YAAY,CAACG,MAAb,GAAsB,CAA7C,GAAkD,CAAlD,GAAsDE,mBAAhI;;AAEA,UAAIwB,KAAK,KAAK,CAAd,EAAiB;AACf,YAAIE,UAAU,GAAG/B,YAAY,CAAE,CAAF,CAA7B;AACA8B,QAAAA,cAAc,gCAAQ9B,YAAY,CAACgC,KAAb,CAAmB,CAAnB,EAAsBhC,YAAY,CAACG,MAAnC,CAAR,IAAoD4B,UAApD,EAAd;AACD,OAHD,MAIK;AACH,YAAIE,SAAS,GAAGjC,YAAY,CAAEA,YAAY,CAACG,MAAb,GAAsB,CAAxB,CAA5B;AACA2B,QAAAA,cAAc,IAAKG,SAAL,4BAAmBjC,YAAY,CAACgC,KAAb,CAAmB,CAAnB,EAAsBhC,YAAY,CAACG,MAAb,GAAsB,CAA5C,CAAnB,EAAd;AACD;;AAEDI,MAAAA,cAAc,mBAAMD,WAAN;AAAmBF,QAAAA,YAAY,EAAZA,YAAnB;AAAiCC,QAAAA,mBAAmB,EAAnBA;AAAjC,SAAd;AAEA6B,MAAAA,UAAU,CAAC,YAAM;AACfjC,QAAAA,eAAe,CAAC6B,cAAD,CAAf;AACApB,QAAAA,QAAQ,CAACG,aAAT,CAAuB,MAAM/B,MAAM,CAACgC,SAAb,GAAyB3B,kBAAhD,EAAoE4B,KAApE,CAA0EW,UAA1E,GAAwFtB,YAAY,IAAIR,WAAW,CAAC4B,WAAZ,GAA0BvC,YAA9B,CAAZ,GAA0D,IAAlJ;AACD,OAHS,EAGP4C,KAAK,KAAK,CAAV,GAAc3C,aAAd,GAA8B,CAHvB,CAAV;AAKAgD,MAAAA,UAAU,CAAC,YAAM;AACfzB,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD,OAFS,EAEPvB,aAFO,CAAV;AAGD;AACF,GA7BD;;AA+BA,MAAMiD,eAAe,GAAG,SAAlBA,eAAkB,CAAAZ,KAAK,EAAI;AAC/B,QAAIjB,WAAW,CAACD,mBAAZ,KAAoCkB,KAAxC,EAA+C,OAA/C,KACK;AACH,UAAIT,SAAS,GAAGJ,QAAQ,CAACG,aAAT,CAAuB,MAAM/B,MAAM,CAACgC,SAAb,GAAyB3B,kBAAhD,CAAhB;AACA2B,MAAAA,SAAS,CAACC,KAAV,CAAgBC,UAAhB,GAA6B,MAA7B;AACA,UAAIZ,YAAY,GAAGmB,KAAK,GAAGjB,WAAW,CAACD,mBAAvC;AAEA,UAAIyB,cAAc,GAAG,EAArB;;AACA,UAAI1B,YAAY,IAAI,CAApB,EAAuB;AACrB,YAAI2B,UAAU,GAAG/B,YAAY,CAACgC,KAAb,CAAmB,CAAnB,EAAsBI,IAAI,CAACC,GAAL,CAASjC,YAAT,CAAtB,CAAjB;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYa,UAAZ;AACAD,QAAAA,cAAc,gCAAQ9B,YAAY,CAACgC,KAAb,CAAmBI,IAAI,CAACC,GAAL,CAASjC,YAAT,CAAnB,EAA2CJ,YAAY,CAACG,MAAxD,CAAR,sBAA4E4B,UAA5E,EAAd;AACD,OAJD,MAKK;AACH,YAAIE,SAAS,GAAGjC,YAAY,CAACgC,KAAb,CAAmBhC,YAAY,CAACG,MAAb,GAAsBiC,IAAI,CAACC,GAAL,CAASjC,YAAT,CAAzC,EAAiEJ,YAAY,CAACG,MAA9E,CAAhB;AACAH,QAAAA,YAAY,CAACsC,MAAb,CAAoBtC,YAAY,CAACG,MAAb,GAAsBiC,IAAI,CAACC,GAAL,CAASjC,YAAT,CAA1C,EAAkE6B,SAAS,CAAC9B,MAA5E;AACA2B,QAAAA,cAAc,gCAAQG,SAAR,sBAAsBjC,YAAtB,EAAd;AACD;;AAGDO,MAAAA,cAAc,mBACTD,WADS;AAEZF,QAAAA,YAAY,EAAEE,WAAW,CAACF,YAAZ,GAA4BA,YAF9B;AAGZC,QAAAA,mBAAmB,EAAEkB;AAHT,SAAd;AAMAtB,MAAAA,eAAe,CAAC6B,cAAD,CAAf;AACAhB,MAAAA,SAAS,CAACC,KAAV,CAAgBW,UAAhB,GAA8B,CAACpB,WAAW,CAACF,YAAZ,GAA4BA,YAA7B,KAA+CR,WAAW,CAAC4B,WAAZ,GAA0BvC,YAAzE,IAAyF,IAAvH;AAEAiD,MAAAA,UAAU,CAAC;AAAA,eAAMpB,SAAS,CAACC,KAAV,CAAgBC,UAAhB,GAA6B,eAAe9B,aAAf,GAA+B,IAAlE;AAAA,OAAD,EAAyEA,aAAzE,CAAV;AACD;AACF,GA/BD;;AAiCA,SACE;AAAK,IAAA,SAAS,EAAGJ,MAAM,CAAC8B,IAAxB;AAA+B,IAAA,EAAE,EAAG9B,MAAM,CAAC8B,IAAP,GAAcvB,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAG;AAAEkD,MAAAA,MAAM,EAAEnD,WAAV;AAAuBoD,MAAAA,QAAQ,EAAE;AAAjC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAG;AACNf,MAAAA,KAAK,EAAE/B,WAAW,CAAC8B,WAAZ,IAA2BlC,WAAW,IAAI,CAA1C,KAAgDC,YAAY,IAAI,CAAhE,IAAqE;AADtE,KADV;AAIE,IAAA,SAAS,EAAGT,MAAM,CAAC2D,KAAP,GAAe,GAAf,GAAqBtD,kBAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAGL,MAAM,CAACgC,SAAP,GAAmB,GAAnB,GAAyBhC,MAAM,CAACgC,SAAhC,GAA4C3B,kBAA7D;AACK,IAAA,KAAK,EAAG;AACNuD,MAAAA,IAAI,EAAE,EAAEpC,WAAW,CAACF,YAAZ,IAA4BR,WAAW,CAAC4B,WAAZ,GAA0BvC,YAAtD,CAAF,IAAyE,IADzE;AAENwC,MAAAA,KAAK,EAAE7B,WAAW,IAEd,CAACA,WAAW,CAAC4B,WAAZ,GAA2B,CAAChC,WAAW,IAAI,CAAhB,KAAsBP,YAAY,GAAG,CAArC,CAA5B,IACEA,YAFJ,GAGEe,YAAY,CAACG,MAHf,GAGwB;AANpB,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASIH,YAAY,CAAC2C,GAAb,CAAiB,UAAArB,IAAI;AAAA,WAAIA,IAAJ;AAAA,GAArB,CATJ,CALF,CADF,EAkBE;AAAK,IAAA,SAAS,EAAGxC,MAAM,CAAC8D,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,OAAO,EAAGhB,WAAW,CAACiB,IAAZ,CAAiB,IAAjB,EAAuB,CAAvB,CAAf;AAA2C,IAAA,KAAK,EAAC,IAAjD;AAAsD,IAAA,MAAM,EAAC,IAA7D;AAAkE,IAAA,OAAO,EAAC,WAA1E;AAAsF,IAAA,IAAI,EAAC,MAA3F;AACK,IAAA,KAAK,EAAC,4BADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,EAAE,EAAC,IAAnB;AAAwB,IAAA,CAAC,EAAC,IAA1B;AAA+B,IAAA,IAAI,EAAC,SAApC;AAA8C,IAAA,WAAW,EAAC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAM,IAAA,QAAQ,EAAC,SAAf;AAAyB,IAAA,QAAQ,EAAC,SAAlC;AACM,IAAA,CAAC,EAAC,kHADR;AAEM,IAAA,IAAI,EAAC,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EASE;AAAK,IAAA,KAAK,EAAC,IAAX;AAAgB,IAAA,MAAM,EAAC,IAAvB;AAA4B,IAAA,OAAO,EAAC,WAApC;AAAgD,IAAA,IAAI,EAAC,MAArD;AAA4D,IAAA,KAAK,EAAC,4BAAlE;AACK,IAAA,OAAO,EAAGjB,WAAW,CAACiB,IAAZ,CAAiB,IAAjB,EAAuB,CAAvB,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAQ,IAAA,CAAC,EAAC,IAAV;AAAe,IAAA,SAAS,EAAC,wBAAzB;AAAkD,IAAA,IAAI,EAAC,SAAvD;AAAiE,IAAA,WAAW,EAAC,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAM,IAAA,QAAQ,EAAC,SAAf;AAAyB,IAAA,QAAQ,EAAC,SAAlC;AACM,IAAA,CAAC,EAAC,kHADR;AAEM,IAAA,IAAI,EAAC,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CATF,CAlBF,CADF,EAqCE;AAAK,IAAA,SAAS,EAAG/D,MAAM,CAACgE,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI9C,YAAY,CAAC2C,GAAb,CAAiB,UAACrB,IAAD,EAAOyB,GAAP;AAAA,WACjB;AAAK,MAAA,GAAG,EAAGA,GAAG,GAAGzB,IAAjB;AACK,MAAA,OAAO,EAAGa,eAAe,CAACU,IAAhB,CAAqB,IAArB,EAA2BE,GAA3B,CADf;AAEK,MAAA,SAAS,EAAGzC,WAAW,CAACD,mBAAZ,KAAoC0C,GAApC,GAA0CjE,MAAM,CAACkE,YAAjD,GAAgE,EAFjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAAjB,CADJ,CArCF,CADF;AA+CD,CA3JD;;AA6JA,eAAejE,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styles from './SlideShow.module.scss'\n\nconst SlideShow = ({ children = [], showElements, animationTime = 300, classNameContainer, slideHeight, idRoot, paddingLeft, paddingRight, marginRight, windowInnerWidth }) => {\n\n  const [ rootElement, setRootElement ] = useState({})\n  const [ wrapElement, setWrapElement ] = useState({})\n  const [ containerElement, setContainerElement ] = useState({})\n  const [ copyChildren, setCopyChildren ] = useState([])\n  const [ slideOption, setSlideOption ] = useState({\n    totalSlide: children.length,\n    currentIndex: 0,\n    currentElementIndex: 0\n  })\n  const [ slideIsOver, setSlideIsOver ] = useState(false)\n\n  useEffect(() => {\n    setRootElement(document.getElementById(styles.root + idRoot))\n  }, [ rootElement ])\n\n  useEffect(() => {\n    setWrapElement(document.querySelector('.' + classNameContainer))\n  }, [ wrapElement ])\n\n  useEffect(() => {\n    let container = document.querySelector('.' + styles.container + classNameContainer)\n    setContainerElement(container)\n    container.style.transition = 'left ease ' + animationTime + 'ms'\n    console.log('left linear ' + animationTime + 'ms')\n    let slideItem = document.querySelectorAll('.' + styles.container + classNameContainer + '>div')\n    slideItem.forEach((item, index) => {\n      console.log(((wrapElement.offsetWidth - ((showElements - 1) * marginRight)) / (showElements)))\n      item.style.width = ((wrapElement.offsetWidth - ((showElements - 1) * (marginRight || 0))) / (showElements)) + 'px'\n      item.style.marginRight = (marginRight || 0) + 'px'\n    })\n\n  }, [ containerElement, windowInnerWidth ])\n\n  useEffect(() => {\n    document.querySelector('.' + styles.container + classNameContainer).style.marginLeft = (slideOption.currentIndex * (wrapElement.offsetWidth / showElements) + 'px')\n  }, [windowInnerWidth])\n\n  useEffect(() => {\n    console.log(children)\n    setCopyChildren(children.concat())\n  }, [ children ])\n\n  const changeSlide = slide => {\n    if (slideIsOver) return false\n    else {\n      setSlideIsOver(true)\n      let newChildrenArr = []\n      let currentIndex = slideOption.currentIndex + (slide)\n      let currentElementIndex = slideOption.currentElementIndex + (slide)\n      currentElementIndex = currentElementIndex < 0 ? copyChildren.length - 1 : currentElementIndex > (copyChildren.length - 1) ? 0 : currentElementIndex\n\n      if (slide === 1) {\n        let firstChild = copyChildren[ 0 ]\n        newChildrenArr = [ ...copyChildren.slice(1, copyChildren.length), firstChild ]\n      }\n      else {\n        let lastChild = copyChildren[ copyChildren.length - 1 ]\n        newChildrenArr = [ lastChild, ...copyChildren.slice(0, copyChildren.length - 1) ]\n      }\n\n      setSlideOption({ ...slideOption, currentIndex, currentElementIndex })\n\n      setTimeout(() => {\n        setCopyChildren(newChildrenArr)\n        document.querySelector('.' + styles.container + classNameContainer).style.marginLeft = (currentIndex * (wrapElement.offsetWidth / showElements) + 'px')\n      }, slide === 1 ? animationTime : 0)\n\n      setTimeout(() => {\n        setSlideIsOver(false)\n      }, animationTime)\n    }\n  }\n\n  const setCurrentSlide = index => {\n    if (slideOption.currentElementIndex === index) return\n    else {\n      let container = document.querySelector('.' + styles.container + classNameContainer)\n      container.style.transition = 'none'\n      let currentIndex = index - slideOption.currentElementIndex\n\n      let newChildrenArr = []\n      if (currentIndex >= 1) {\n        let firstChild = copyChildren.slice(0, Math.abs(currentIndex))\n        console.log(firstChild)\n        newChildrenArr = [ ...copyChildren.slice(Math.abs(currentIndex), copyChildren.length), ...firstChild ]\n      }\n      else {\n        let lastChild = copyChildren.slice(copyChildren.length - Math.abs(currentIndex), copyChildren.length)\n        copyChildren.splice(copyChildren.length - Math.abs(currentIndex), lastChild.length)\n        newChildrenArr = [ ...lastChild, ...copyChildren ]\n      }\n\n\n      setSlideOption({\n        ...slideOption,\n        currentIndex: slideOption.currentIndex + (currentIndex),\n        currentElementIndex: index\n      })\n\n      setCopyChildren(newChildrenArr)\n      container.style.marginLeft = ((slideOption.currentIndex + (currentIndex)) * (wrapElement.offsetWidth / showElements) + 'px')\n\n      setTimeout(() => container.style.transition = 'left ease ' + animationTime + 'ms', animationTime)\n    }\n  }\n\n  return (\n    <div className={ styles.root } id={ styles.root + idRoot }>\n      <div style={ { height: slideHeight, position: 'relative' } }>\n        <div\n          style={ {\n            width: rootElement.offsetWidth - (paddingLeft || 0) - (paddingRight || 0) + 'px'\n          } }\n          className={ styles.wrapp + ' ' + classNameContainer }>\n          <div className={ styles.container + ' ' + styles.container + classNameContainer }\n               style={ {\n                 left: -(slideOption.currentIndex * (wrapElement.offsetWidth / showElements)) + 'px',\n                 width: wrapElement &&\n                   (\n                     (wrapElement.offsetWidth + ((marginRight || 0) * (showElements - 1)))\n                     / showElements)\n                   * copyChildren.length + 'px'\n               } }>\n            { copyChildren.map(item => item) }\n          </div>\n        </div>\n        <div className={ styles.arrowControl }>\n          <svg onClick={ changeSlide.bind(null, 1) } width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\"\n               xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"25\" cy=\"25\" r=\"25\" fill=\"#4D3E3D\" fillOpacity=\"0.5\"/>\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                  d=\"M31.0722 36.7022L27.9061 39.8683L12.8904 24.8526L27.9061 9.83691L31.0722 13.003L19.2226 24.8526L31.0722 36.7022Z\"\n                  fill=\"white\"/>\n          </svg>\n\n          <svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n               onClick={ changeSlide.bind(null, 1) }>\n            <circle r=\"25\" transform=\"matrix(-1 0 0 1 25 25)\" fill=\"#4D3E3D\" fillOpacity=\"0.5\"/>\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                  d=\"M18.9277 36.7022L22.0938 39.8683L37.1096 24.8526L22.0938 9.83691L18.9277 13.003L30.7773 24.8526L18.9277 36.7022Z\"\n                  fill=\"white\"/>\n          </svg>\n        </div>\n      </div>\n      <div className={ styles.circleControl }>\n        { copyChildren.map((item, key) =>\n          <div key={ key + item }\n               onClick={ setCurrentSlide.bind(null, key) }\n               className={ slideOption.currentElementIndex === key ? styles.activeCircle : '' }/>\n        ) }\n      </div>\n    </div>\n  )\n}\n\nexport default SlideShow\n"]},"metadata":{},"sourceType":"module"}