{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styles from './Slot.module.scss';\nimport PropTypes from 'prop-types';\n\nvar Slot = function Slot(_ref) {\n  var item = _ref.item,\n      index = _ref.index;\n  var ref = React.createRef();\n\n  var _useState = useState([]),\n      childNodes = _useState[0],\n      setChildNodes = _useState[1];\n\n  useEffect(function () {\n    setChildNodes(ref.current.childNodes);\n    setHeight(ref);\n    console.log(ref);\n  }, [ref]);\n\n  var setHeight = function setHeight(_ref2) {\n    var current = _ref2.current;\n    if (!current) return;else {\n      var padding = getComputedStyle(current).paddingTop;\n      console.log(padding);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.root + (item.isActive ? ' ' + styles.isActive : ''),\n    \"custom-id\": index,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.title,\n    \"custom-id\": index,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, item.title, \" \", index), __jsx(\"div\", {\n    className: styles.description,\n    \"custom-id\": index,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, item.description));\n};\n\nSlot.propTypes = {\n  item: PropTypes.object\n};\nexport default Slot;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js"],"names":["React","useEffect","useState","styles","PropTypes","Slot","item","index","ref","createRef","childNodes","setChildNodes","current","setHeight","console","log","padding","getComputedStyle","paddingTop","root","isActive","title","description","propTypes","object"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAqB;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAChC,MAAMC,GAAG,GAAGR,KAAK,CAACS,SAAN,EAAZ;;AADgC,kBAEMP,QAAQ,CAAC,EAAD,CAFd;AAAA,MAExBQ,UAFwB;AAAA,MAEZC,aAFY;;AAIhCV,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,aAAa,CAACH,GAAG,CAACI,OAAJ,CAAYF,UAAb,CAAb;AACAG,IAAAA,SAAS,CAACL,GAAD,CAAT;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACD,GAJQ,EAIN,CAAEA,GAAF,CAJM,CAAT;;AAMA,MAAMK,SAAS,GAAG,SAAZA,SAAY,QAAe;AAAA,QAAbD,OAAa,SAAbA,OAAa;AAC/B,QAAI,CAACA,OAAL,EAAc,OAAd,KACK;AACH,UAAMI,OAAO,GAAGC,gBAAgB,CAACL,OAAD,CAAhB,CAA0BM,UAA1C;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD;AACF,GAND;;AAQA,SACE;AAAK,IAAA,SAAS,EAAGb,MAAM,CAACgB,IAAP,IAAeb,IAAI,CAACc,QAAL,GAAgB,MAAMjB,MAAM,CAACiB,QAA7B,GAAwC,EAAvD,CAAjB;AACK,iBAAYb,KADjB;AAEK,IAAA,GAAG,EAAGC,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAGL,MAAM,CAACkB,KAAxB;AAAgC,iBAAYd,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDD,IAAI,CAACe,KAA3D,OAAqEd,KAArE,CAHF,EAIE;AAAK,IAAA,SAAS,EAAGJ,MAAM,CAACmB,WAAxB;AAAsC,iBAAYf,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4DD,IAAI,CAACgB,WAAjE,CAJF,CADF;AAQD,CA1BD;;AA4BAjB,IAAI,CAACkB,SAAL,GAAiB;AACfjB,EAAAA,IAAI,EAAEF,SAAS,CAACoB;AADD,CAAjB;AAIA,eAAenB,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styles from './Slot.module.scss'\nimport PropTypes from 'prop-types'\n\nconst Slot = ({ item, index }) => {\n  const ref = React.createRef()\n  const [ childNodes, setChildNodes ] = useState([])\n\n  useEffect(() => {\n    setChildNodes(ref.current.childNodes)\n    setHeight(ref)\n    console.log(ref)\n  }, [ ref ])\n\n  const setHeight = ({current}) => {\n    if (!current) return\n    else {\n      const padding = getComputedStyle(current).paddingTop\n      console.log(padding)\n    }\n  }\n\n  return (\n    <div className={ styles.root + (item.isActive ? ' ' + styles.isActive : '') }\n         custom-id={ index }\n         ref={ ref }>\n      <div className={ styles.title } custom-id={ index }>{ item.title } { index }</div>\n      <div className={ styles.description } custom-id={ index }>{ item.description }</div>\n    </div>\n  )\n}\n\nSlot.propTypes = {\n  item: PropTypes.object,\n}\n\nexport default Slot\n"]},"metadata":{},"sourceType":"module"}