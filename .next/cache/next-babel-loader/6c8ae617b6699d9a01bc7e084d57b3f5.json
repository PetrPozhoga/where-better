{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styles from './Select.module.scss';\n\nconst Select = ({\n  items,\n  changeSelect = function () {},\n  name,\n  itemKey = 'label',\n  selected\n}) => {\n  const {\n    0: showItems,\n    1: setShowItems\n  } = useState(false);\n  const {\n    0: selectedItem,\n    1: setSelectedItem\n  } = useState({});\n  let target;\n  useEffect(() => {\n    console.log(selected || items[0]);\n    setSelectedItem(JSON.parse(JSON.stringify(selected || items[0])));\n  }, [selected, items]);\n\n  const dropDown = event => {\n    target = event.target;\n    setShowItems(!showItems);\n    document.getElementById('App').addEventListener('click', hideDropDown);\n  };\n\n  const hideDropDown = event => {\n    if (event.target !== target) {\n      setShowItems(false);\n      document.getElementById('App').removeEventListener('click', hideDropDown);\n    }\n  };\n\n  const selectItem = item => {\n    setSelectedItem(item);\n    setShowItems(false);\n\n    try {\n      changeSelect(item, name);\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.root + ' ' + (showItems ? styles.rootActive : ''),\n    style: {}\n  }, __jsx(\"div\", {\n    className: styles.box\n  }, __jsx(\"div\", {\n    className: styles.container\n  }, __jsx(\"div\", {\n    className: styles.selectedItem,\n    onClick: dropDown\n  }, selectedItem[itemKey]), __jsx(\"div\", {\n    className: styles.arrow,\n    onClick: dropDown\n  }, __jsx(\"svg\", {\n    width: \"8\",\n    height: \"6\",\n    viewBox: \"0 0 8 6\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: !showItems ? '' : styles.iconTop\n  }, __jsx(\"path\", {\n    d: \"M1.38037 1.53516L4.08887 5.07069L6.79736 1.53516\",\n    stroke: \"black\",\n    strokeWidth: \"1.5\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), __jsx(\"span\", {\n    className: `${!showItems ? 'icon-shape' : 'icon-shape icon-shape-top'}`\n  }))), __jsx(\"div\", {\n    className: styles.items,\n    style: {\n      display: showItems ? 'block' : 'none'\n    }\n  }, items.map((item, index) => __jsx(\"div\", {\n    key: index,\n    onClick: () => selectItem(item),\n    className: selectedItem[itemKey] === item[itemKey] ? styles.selected : ''\n  }, item[itemKey])))));\n};\n\nexport default Select;","map":null,"metadata":{},"sourceType":"module"}