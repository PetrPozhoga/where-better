{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styles from './Slot.module.scss';\nimport PropTypes from 'prop-types';\n\nvar Slot = function Slot(_ref) {\n  var item = _ref.item,\n      index = _ref.index;\n  var ref = React.createRef();\n\n  var _useState = useState([]),\n      childNodes = _useState[0],\n      setChildNodes = _useState[1];\n\n  useEffect(function () {\n    setChildNodes(ref.current.childNodes);\n    setHeight(ref);\n  }, [ref]);\n\n  var setHeight = function setHeight(_ref2) {\n    var current = _ref2.current;\n    if (!current) return;else {\n      var rootPadding = sum(getStyle(current, ['paddingTop', 'paddingBottom']));\n      var _childNodes = current.childNodes;\n\n      if (_childNodes.length) {\n        console.log(rootPadding);\n        var titleHeight = sum(getStyle(_childNodes[0], ['height']));\n        var totalHeight = item.isActive ? titleHeight + sum(getStyle(_childNodes[1], ['height', 'marginTop'])) : titleHeight;\n        totalHeight += rootPadding;\n        current.style.height = totalHeight + 'px';\n      }\n    }\n  };\n\n  var sum = function sum(arr) {\n    return arr.reduce(function (acc, item) {\n      return acc += item;\n    }, 0);\n  };\n\n  var getStyle = function getStyle(node, styleList) {\n    return styleList.map(function (style) {\n      return Number(getComputedStyle(node)[style].replace('px', ''));\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: styles.root + (item.isActive ? ' ' + styles.isActive : ''),\n    \"custom-id\": index,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.title,\n    \"custom-id\": index,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, item.title, \" \", index), __jsx(\"div\", {\n    className: styles.description,\n    \"custom-id\": index,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, item.description));\n};\n\nSlot.propTypes = {\n  item: PropTypes.object\n};\nexport default Slot;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js"],"names":["React","useEffect","useState","styles","PropTypes","Slot","item","index","ref","createRef","childNodes","setChildNodes","current","setHeight","rootPadding","sum","getStyle","length","console","log","titleHeight","totalHeight","isActive","style","height","arr","reduce","acc","node","styleList","map","Number","getComputedStyle","replace","root","title","description","propTypes","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styles from './Slot.module.scss'\nimport PropTypes from 'prop-types'\n\nconst Slot = ({ item, index }) => {\n  const ref = React.createRef()\n  const [ childNodes, setChildNodes ] = useState([])\n\n  useEffect(() => {\n    setChildNodes(ref.current.childNodes)\n    setHeight(ref)\n  }, [ ref ])\n\n  const setHeight = ({ current }) => {\n    if (!current) return\n    else {\n      const rootPadding = sum(getStyle(current, ['paddingTop', 'paddingBottom']))\n      const { childNodes } = current\n      if (childNodes.length) {\n        console.log(rootPadding)\n        const titleHeight = sum(getStyle(childNodes[0], ['height']))\n        let totalHeight = item.isActive ? titleHeight + sum(getStyle(childNodes[1], ['height', 'marginTop'])) : titleHeight\n        totalHeight += rootPadding\n        current.style.height = totalHeight + 'px'\n      }\n    }\n  }\n\n  const sum = arr => arr.reduce((acc, item) => acc += item ,0)\n\n  const getStyle = (node, styleList) => styleList.map(style => Number(getComputedStyle(node)[style].replace('px', '')))\n\n  return (\n    <div className={ styles.root + (item.isActive ? ' ' + styles.isActive : '') }\n         custom-id={ index }\n         ref={ ref }>\n      <div className={ styles.title } custom-id={ index }>{ item.title } { index }</div>\n      <div className={ styles.description } custom-id={ index }>{ item.description }</div>\n    </div>\n  )\n}\n\nSlot.propTypes = {\n  item: PropTypes.object,\n}\n\nexport default Slot\n"]},"metadata":{},"sourceType":"module"}