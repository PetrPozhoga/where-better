{"ast":null,"code":"var _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styles from './Slot.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Slot = ({\n  item,\n  index\n}) => {\n  const ref = React.createRef();\n  const {\n    0: childNodes,\n    1: setChildNodes\n  } = useState([]);\n  useEffect(() => {\n    setChildNodes(ref.current.childNodes);\n    setHeight(ref);\n  }, [ref]);\n\n  const setHeight = ({\n    current\n  }) => {\n    if (!current) return;else {\n      const padding = sum(getStyle(current, ['paddingTop', 'paddingBottom']) || []);\n      const {\n        childNodes\n      } = current;\n\n      if (childNodes.length) {\n        console.log(padding);\n        let totalHeight = item.isActive ? childNodes[0].offsetHeight + childNodes[1].offsetHeight : childNodes[0].offsetHeight;\n        totalHeight += padding;\n        current.style.height = totalHeight + 'px';\n      }\n    }\n  };\n\n  const sum = arr => arr.reduce((acc, item) => acc += item, 0);\n\n  const getStyle = (node, styleList) => styleList.map(style => Number(getComputedStyle(node)[style].replace('px', '')));\n\n  return __jsx(\"div\", {\n    className: styles.root + (item.isActive ? ' ' + styles.isActive : ''),\n    \"custom-id\": index,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.title,\n    \"custom-id\": index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, item.title, \" \", index), __jsx(\"div\", {\n    className: styles.description,\n    \"custom-id\": index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, item.description));\n};\n\nSlot.propTypes = {\n  item: PropTypes.object\n};\nexport default Slot;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js"],"names":["React","useEffect","useState","styles","PropTypes","Slot","item","index","ref","createRef","childNodes","setChildNodes","current","setHeight","padding","sum","getStyle","length","console","log","totalHeight","isActive","offsetHeight","style","height","arr","reduce","acc","node","styleList","map","Number","getComputedStyle","replace","root","title","description","propTypes","object"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAChC,QAAMC,GAAG,GAAGR,KAAK,CAACS,SAAN,EAAZ;AACA,QAAM;AAAA,OAAEC,UAAF;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,aAAa,CAACH,GAAG,CAACI,OAAJ,CAAYF,UAAb,CAAb;AACAG,IAAAA,SAAS,CAACL,GAAD,CAAT;AACD,GAHQ,EAGN,CAAEA,GAAF,CAHM,CAAT;;AAKA,QAAMK,SAAS,GAAG,CAAC;AAAED,IAAAA;AAAF,GAAD,KAAiB;AACjC,QAAI,CAACA,OAAL,EAAc,OAAd,KACK;AACH,YAAME,OAAO,GAAGC,GAAG,CAACC,QAAQ,CAACJ,OAAD,EAAU,CAAC,YAAD,EAAe,eAAf,CAAV,CAAR,IAAsD,EAAvD,CAAnB;AACA,YAAM;AAAEF,QAAAA;AAAF,UAAiBE,OAAvB;;AACA,UAAIF,UAAU,CAACO,MAAf,EAAuB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,YAAIM,WAAW,GAAGd,IAAI,CAACe,QAAL,GAAgBX,UAAU,CAAE,CAAF,CAAV,CAAgBY,YAAhB,GAA+BZ,UAAU,CAAE,CAAF,CAAV,CAAgBY,YAA/D,GAA8EZ,UAAU,CAAE,CAAF,CAAV,CAAgBY,YAAhH;AACAF,QAAAA,WAAW,IAAIN,OAAf;AACAF,QAAAA,OAAO,CAACW,KAAR,CAAcC,MAAd,GAAuBJ,WAAW,GAAG,IAArC;AACD;AACF;AACF,GAZD;;AAcA,QAAML,GAAG,GAAGU,GAAG,IAAIA,GAAG,CAACC,MAAJ,CAAW,CAACC,GAAD,EAAMrB,IAAN,KAAeqB,GAAG,IAAIrB,IAAjC,EAAuC,CAAvC,CAAnB;;AAEA,QAAMU,QAAQ,GAAG,CAACY,IAAD,EAAOC,SAAP,KAAqBA,SAAS,CAACC,GAAV,CAAcP,KAAK,IAAIQ,MAAM,CAACC,gBAAgB,CAACJ,IAAD,CAAhB,CAAuBL,KAAvB,EAA8BU,OAA9B,CAAsC,IAAtC,EAA4C,EAA5C,CAAD,CAA7B,CAAtC;;AAEA,SACE;AAAK,IAAA,SAAS,EAAG9B,MAAM,CAAC+B,IAAP,IAAe5B,IAAI,CAACe,QAAL,GAAgB,MAAMlB,MAAM,CAACkB,QAA7B,GAAwC,EAAvD,CAAjB;AACK,iBAAYd,KADjB;AAEK,IAAA,GAAG,EAAGC,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAGL,MAAM,CAACgC,KAAxB;AAAgC,iBAAY5B,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDD,IAAI,CAAC6B,KAA3D,OAAqE5B,KAArE,CAHF,EAIE;AAAK,IAAA,SAAS,EAAGJ,MAAM,CAACiC,WAAxB;AAAsC,iBAAY7B,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4DD,IAAI,CAAC8B,WAAjE,CAJF,CADF;AAQD,CAnCD;;AAqCA/B,IAAI,CAACgC,SAAL,GAAiB;AACf/B,EAAAA,IAAI,EAAEF,SAAS,CAACkC;AADD,CAAjB;AAIA,eAAejC,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styles from './Slot.module.scss'\nimport PropTypes from 'prop-types'\n\nconst Slot = ({ item, index }) => {\n  const ref = React.createRef()\n  const [ childNodes, setChildNodes ] = useState([])\n\n  useEffect(() => {\n    setChildNodes(ref.current.childNodes)\n    setHeight(ref)\n  }, [ ref ])\n\n  const setHeight = ({ current }) => {\n    if (!current) return\n    else {\n      const padding = sum(getStyle(current, ['paddingTop', 'paddingBottom']) || [])\n      const { childNodes } = current\n      if (childNodes.length) {\n        console.log(padding)\n        let totalHeight = item.isActive ? childNodes[ 0 ].offsetHeight + childNodes[ 1 ].offsetHeight : childNodes[ 0 ].offsetHeight\n        totalHeight += padding\n        current.style.height = totalHeight + 'px'\n      }\n    }\n  }\n\n  const sum = arr => arr.reduce((acc, item) => acc += item ,0)\n\n  const getStyle = (node, styleList) => styleList.map(style => Number(getComputedStyle(node)[style].replace('px', '')))\n\n  return (\n    <div className={ styles.root + (item.isActive ? ' ' + styles.isActive : '') }\n         custom-id={ index }\n         ref={ ref }>\n      <div className={ styles.title } custom-id={ index }>{ item.title } { index }</div>\n      <div className={ styles.description } custom-id={ index }>{ item.description }</div>\n    </div>\n  )\n}\n\nSlot.propTypes = {\n  item: PropTypes.object,\n}\n\nexport default Slot\n"]},"metadata":{},"sourceType":"module"}