{"ast":null,"code":"var _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styles from './Slot.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Slot = ({\n  item,\n  index\n}) => {\n  const ref = React.createRef();\n  const {\n    0: childNodes,\n    1: setChildNodes\n  } = useState([]);\n  useEffect(() => {\n    setChildNodes(ref.current.childNodes);\n    setHeight(ref);\n  }, [ref]);\n\n  const setHeight = ({\n    current\n  }) => {\n    if (!current) return;else {\n      const rootStyle = getComputedStyle(current);\n      const padding = +rootStyle.paddingTop.replace('px', '') + +rootStyle.paddingBottom.replace('px', '');\n      console.log(padding);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.root + (item.isActive ? ' ' + styles.isActive : ''),\n    \"custom-id\": index,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.title,\n    \"custom-id\": index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, item.title, \" \", index), __jsx(\"div\", {\n    className: styles.description,\n    \"custom-id\": index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, item.description));\n};\n\nSlot.propTypes = {\n  item: PropTypes.object\n};\nexport default Slot;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js"],"names":["React","useEffect","useState","styles","PropTypes","Slot","item","index","ref","createRef","childNodes","setChildNodes","current","setHeight","rootStyle","getComputedStyle","padding","paddingTop","replace","paddingBottom","console","log","root","isActive","title","description","propTypes","object"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAChC,QAAMC,GAAG,GAAGR,KAAK,CAACS,SAAN,EAAZ;AACA,QAAM;AAAA,OAAEC,UAAF;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,aAAa,CAACH,GAAG,CAACI,OAAJ,CAAYF,UAAb,CAAb;AACAG,IAAAA,SAAS,CAACL,GAAD,CAAT;AACD,GAHQ,EAGN,CAAEA,GAAF,CAHM,CAAT;;AAKA,QAAMK,SAAS,GAAG,CAAC;AAAED,IAAAA;AAAF,GAAD,KAAiB;AACjC,QAAI,CAACA,OAAL,EAAc,OAAd,KACK;AACH,YAAME,SAAS,GAAGC,gBAAgB,CAACH,OAAD,CAAlC;AACA,YAAMI,OAAO,GAAG,CAACF,SAAS,CAACG,UAAV,CAAqBC,OAArB,CAA6B,IAA7B,EAAmC,EAAnC,CAAD,GAA2C,CAACJ,SAAS,CAACK,aAAV,CAAwBD,OAAxB,CAAgC,IAAhC,EAAsC,EAAtC,CAA5D;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACD;AACF,GAPD;;AASA,SACE;AAAK,IAAA,SAAS,EAAGb,MAAM,CAACmB,IAAP,IAAehB,IAAI,CAACiB,QAAL,GAAgB,MAAMpB,MAAM,CAACoB,QAA7B,GAAwC,EAAvD,CAAjB;AACK,iBAAYhB,KADjB;AAEK,IAAA,GAAG,EAAGC,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAGL,MAAM,CAACqB,KAAxB;AAAgC,iBAAYjB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDD,IAAI,CAACkB,KAA3D,OAAqEjB,KAArE,CAHF,EAIE;AAAK,IAAA,SAAS,EAAGJ,MAAM,CAACsB,WAAxB;AAAsC,iBAAYlB,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4DD,IAAI,CAACmB,WAAjE,CAJF,CADF;AAQD,CA1BD;;AA4BApB,IAAI,CAACqB,SAAL,GAAiB;AACfpB,EAAAA,IAAI,EAAEF,SAAS,CAACuB;AADD,CAAjB;AAIA,eAAetB,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styles from './Slot.module.scss'\nimport PropTypes from 'prop-types'\n\nconst Slot = ({ item, index }) => {\n  const ref = React.createRef()\n  const [ childNodes, setChildNodes ] = useState([])\n\n  useEffect(() => {\n    setChildNodes(ref.current.childNodes)\n    setHeight(ref)\n  }, [ ref ])\n\n  const setHeight = ({ current }) => {\n    if (!current) return\n    else {\n      const rootStyle = getComputedStyle(current)\n      const padding = +rootStyle.paddingTop.replace('px', '') + (+rootStyle.paddingBottom.replace('px', ''))\n      console.log(padding)\n    }\n  }\n\n  return (\n    <div className={ styles.root + (item.isActive ? ' ' + styles.isActive : '') }\n         custom-id={ index }\n         ref={ ref }>\n      <div className={ styles.title } custom-id={ index }>{ item.title } { index }</div>\n      <div className={ styles.description } custom-id={ index }>{ item.description }</div>\n    </div>\n  )\n}\n\nSlot.propTypes = {\n  item: PropTypes.object,\n}\n\nexport default Slot\n"]},"metadata":{},"sourceType":"module"}