{"ast":null,"code":"var _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, memo } from 'react';\nimport styles from './Slot.module.scss';\nimport PropTypes from 'prop-types';\nconst Slot = memo(({\n  item,\n  index\n}) => {\n  const ref = React.createRef();\n  useEffect(() => {\n    setHeight(ref);\n  }, [ref]);\n\n  const setHeight = ({\n    current\n  }) => {\n    if (!current) return;else {\n      const rootPadding = sum(getStyle(current, ['paddingTop', 'paddingBottom']));\n      const {\n        childNodes\n      } = current;\n\n      if (childNodes.length) {\n        const titleHeight = sum(getStyle(childNodes[0], ['height']));\n        let totalHeight = item.isActive ? titleHeight + sum(getStyle(childNodes[1], ['height', 'marginTop'])) : titleHeight;\n        totalHeight += rootPadding;\n        current.style.maxHeight = totalHeight + 'px';\n      }\n    }\n  };\n\n  const sum = arr => arr.reduce((acc, item) => acc += item, 0);\n\n  const getStyle = (node, styleList) => styleList.map(style => Number(getComputedStyle(node)[style].replace('px', '')));\n\n  return __jsx(\"div\", {\n    className: styles.root + (item.isActive ? ' ' + styles.isActive : ''),\n    \"custom-id\": index,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.titleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, item.title), __jsx(\"svg\", {\n    width: \"8\",\n    height: \"14\",\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M-1.0334e-06 11.8207L1.39309 13.2138L8 6.60691L1.39309 -5.77595e-07L-1.21788e-07 1.39309L5.21382 6.60691L-1.0334e-06 11.8207Z\",\n    fill: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, item.description));\n});\nSlot.propTypes = {\n  item: PropTypes.object\n};\nexport default Slot;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/DropDown/Slot/Slot.js"],"names":["React","useEffect","memo","styles","PropTypes","Slot","item","index","ref","createRef","setHeight","current","rootPadding","sum","getStyle","childNodes","length","titleHeight","totalHeight","isActive","style","maxHeight","arr","reduce","acc","node","styleList","map","Number","getComputedStyle","replace","root","titleContainer","title","description","propTypes","object"],"mappings":"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","sourcesContent":["import React, { useEffect, memo } from 'react'\nimport styles from './Slot.module.scss'\nimport PropTypes from 'prop-types'\n\nconst Slot = memo(({ item, index }) => {\n  const ref = React.createRef()\n\n  useEffect(() => {\n    setHeight(ref)\n  }, [ ref ])\n\n  const setHeight = ({ current }) => {\n    if (!current) return\n    else {\n      const rootPadding = sum(getStyle(current, [ 'paddingTop', 'paddingBottom' ]))\n      const { childNodes } = current\n      if (childNodes.length) {\n        const titleHeight = sum(getStyle(childNodes[ 0 ], [ 'height' ]))\n        let totalHeight = item.isActive ? titleHeight + sum(getStyle(childNodes[ 1 ], [ 'height', 'marginTop' ])) : titleHeight\n        totalHeight += rootPadding\n        current.style.maxHeight = totalHeight + 'px'\n      }\n    }\n  }\n\n  const sum = arr => arr.reduce((acc, item) => acc += item, 0)\n\n  const getStyle = (node, styleList) => styleList.map(style => Number(getComputedStyle(node)[ style ].replace('px', '')))\n  return (\n    <div className={ styles.root + (item.isActive ? ' ' + styles.isActive : '') }\n         custom-id={ index }\n         ref={ ref }>\n      <div className={ styles.titleContainer }>\n        <div className={ styles.title }>{ item.title }</div>\n        <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                d=\"M-1.0334e-06 11.8207L1.39309 13.2138L8 6.60691L1.39309 -5.77595e-07L-1.21788e-07 1.39309L5.21382 6.60691L-1.0334e-06 11.8207Z\"\n                fill=\"black\"/>\n        </svg>\n\n      </div>\n      <div className={ styles.description }>{ item.description }</div>\n    </div>\n  )\n})\n\nSlot.propTypes = {\n  item: PropTypes.object,\n}\n\nexport default Slot\n"]},"metadata":{},"sourceType":"module"}