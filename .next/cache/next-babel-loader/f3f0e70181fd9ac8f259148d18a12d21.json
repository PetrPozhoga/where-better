{"ast":null,"code":"var _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/SlideShow/SlideShow.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport styles from './SlideShow.module.scss';\n\nconst SlideShow = ({\n  children,\n  showElements,\n  animationTime = 300\n}) => {\n  const {\n    0: rootElement,\n    1: setRootElement\n  } = useState({});\n  const {\n    0: copyChildren,\n    1: setCopyChildren\n  } = useState([]);\n  const {\n    0: slideOption,\n    1: setSlideOption\n  } = useState({\n    totalSlide: children.length,\n    currentIndex: 0,\n    currentElementIndex: 0\n  });\n  const {\n    0: slideIsOver,\n    1: setSlideIsOver\n  } = useState(false);\n  useEffect(() => {\n    setRootElement(document.getElementById(styles.root));\n  }, [rootElement]);\n  useEffect(() => {\n    setCopyChildren(children.slice());\n  }, [children]);\n\n  const changeSlide = slide => {\n    if (slideIsOver) return false;else {\n      setSlideIsOver(true);\n      let newChildrenArr = [];\n      let currentIndex = slideOption.currentIndex + slide;\n      let currentElementIndex = slideOption.currentElementIndex + slide;\n      currentElementIndex = currentElementIndex < 0 ? copyChildren.length - 1 : currentElementIndex > copyChildren.length - 1 ? 0 : currentElementIndex;\n\n      if (slide === 1) {\n        let firstChild = copyChildren[0];\n        newChildrenArr = [...copyChildren.slice(1, copyChildren.length), firstChild];\n      } else {\n        let lastChild = copyChildren[copyChildren.length - 1];\n        newChildrenArr = [lastChild, ...copyChildren.slice(0, copyChildren.length - 1)];\n      }\n\n      setSlideOption(_objectSpread({}, slideOption, {\n        currentIndex,\n        currentElementIndex\n      }));\n      setTimeout(() => {\n        setCopyChildren(newChildrenArr);\n        document.querySelector('.' + styles.container).style.marginLeft = currentIndex * (rootElement.offsetWidth / showElements) + 'px';\n        setSlideIsOver(false);\n      }, slide === 1 ? animationTime : 0);\n    }\n  };\n\n  const setCurrentSlide = index => {\n    let currentIndex = index - slideOption.currentElementIndex;\n    let newChildrenArr = [];\n\n    if (currentIndex >= 1) {\n      let firstChild = copyChildren.slice(0, Math.abs(currentIndex));\n      console.log(firstChild);\n      newChildrenArr = [...copyChildren.slice(Math.abs(currentIndex), copyChildren.length), ...firstChild];\n    } else {\n      let lastChild = copyChildren.slice(copyChildren.length - Math.abs(currentIndex), copyChildren.length);\n      console.log(lastChild, Math.abs(currentIndex), copyChildren.slice(0, index + 1), index); //...copyChildren.slice(0, index + 1)\n\n      newChildrenArr = [...lastChild, ...copyChildren.slice(0, index + 1)];\n    }\n\n    setSlideOption(_objectSpread({}, slideOption, {\n      currentIndex: slideOption.currentIndex + currentIndex,\n      currentElementIndex: index\n    }));\n    setCopyChildren(newChildrenArr);\n    document.querySelector('.' + styles.container).style.marginLeft = (slideOption.currentIndex + currentIndex) * (rootElement.offsetWidth / showElements) + 'px';\n  };\n\n  return __jsx(\"div\", {\n    id: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.wrapp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.container,\n    style: {\n      left: -(slideOption.currentIndex * (rootElement.offsetWidth / showElements)) + 'px',\n      width: rootElement && rootElement.offsetWidth / showElements * copyChildren.length + 'px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, copyChildren.map(item => item))), __jsx(\"div\", {\n    className: styles.arrowControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, __jsx(\"svg\", {\n    width: \"65\",\n    height: \"65\",\n    viewBox: \"0 0 65 65\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    onClick: changeSlide.bind(null, -1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(\"circle\", {\n    cx: \"32.5\",\n    cy: \"32.5\",\n    r: \"32.5\",\n    fill: \"#4D3E3D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M40.3939 47.7127L36.278 51.8287L16.7576 32.3083L36.278 12.7878L40.3939 16.9038L24.9894 32.3083L40.3939 47.7127Z\",\n    fill: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), __jsx(\"svg\", {\n    width: \"65\",\n    height: \"65\",\n    viewBox: \"0 0 65 65\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    onClick: changeSlide.bind(null, 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(\"circle\", {\n    r: \"32.5\",\n    transform: \"matrix(-1 0 0 1 32.5 32.5)\",\n    fill: \"#4D3E3D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M24.6061 47.7127L28.722 51.8287L48.2424 32.3083L28.722 12.7878L24.6061 16.9038L40.0106 32.3083L24.6061 47.7127Z\",\n    fill: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: styles.circleControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, copyChildren.map((item, key) => __jsx(\"div\", {\n    key: key,\n    onClick: setCurrentSlide.bind(null, key),\n    className: slideOption.currentElementIndex === key ? styles.activeCircle : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default SlideShow;","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/componentns/Layouts/SlideShow/SlideShow.js"],"names":["React","useState","useEffect","styles","SlideShow","children","showElements","animationTime","rootElement","setRootElement","copyChildren","setCopyChildren","slideOption","setSlideOption","totalSlide","length","currentIndex","currentElementIndex","slideIsOver","setSlideIsOver","document","getElementById","root","slice","changeSlide","slide","newChildrenArr","firstChild","lastChild","setTimeout","querySelector","container","style","marginLeft","offsetWidth","setCurrentSlide","index","Math","abs","console","log","wrapp","left","width","map","item","arrowControl","bind","circleControl","key","activeCircle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styles from './SlideShow.module.scss'\n\nconst SlideShow = ({ children, showElements, animationTime = 300 }) => {\n\n  const [ rootElement, setRootElement ] = useState({})\n  const [ copyChildren, setCopyChildren ] = useState([])\n  const [ slideOption, setSlideOption ] = useState({\n    totalSlide: children.length,\n    currentIndex: 0,\n    currentElementIndex: 0\n  })\n  const [ slideIsOver, setSlideIsOver ] = useState(false)\n\n  useEffect(() => {\n    setRootElement(document.getElementById(styles.root))\n  }, [ rootElement ])\n\n  useEffect(() => {\n    setCopyChildren(children.slice())\n  }, [ children ])\n\n  const changeSlide = slide => {\n    if (slideIsOver) return false\n    else {\n      setSlideIsOver(true)\n      let newChildrenArr = []\n      let currentIndex = slideOption.currentIndex + (slide)\n      let currentElementIndex = slideOption.currentElementIndex + (slide)\n      currentElementIndex = currentElementIndex < 0 ? copyChildren.length - 1 : currentElementIndex > (copyChildren.length - 1) ? 0 : currentElementIndex\n\n      if (slide === 1) {\n        let firstChild = copyChildren[ 0 ]\n        newChildrenArr = [ ...copyChildren.slice(1, copyChildren.length), firstChild ]\n      }\n      else {\n        let lastChild = copyChildren[ copyChildren.length - 1 ]\n        newChildrenArr = [ lastChild, ...copyChildren.slice(0, copyChildren.length - 1) ]\n      }\n\n      setSlideOption({ ...slideOption, currentIndex, currentElementIndex })\n\n      setTimeout(() => {\n        setCopyChildren(newChildrenArr)\n        document.querySelector('.' + styles.container).style.marginLeft = (currentIndex * (rootElement.offsetWidth / showElements) + 'px')\n        setSlideIsOver(false)\n      }, slide === 1 ? animationTime : 0)\n    }\n  }\n\n  const setCurrentSlide = index => {\n    let currentIndex = index - slideOption.currentElementIndex\n\n    let newChildrenArr = []\n    if (currentIndex >= 1) {\n      let firstChild = copyChildren.slice(0, Math.abs(currentIndex))\n      console.log(firstChild)\n      newChildrenArr = [ ...copyChildren.slice(Math.abs(currentIndex), copyChildren.length), ...firstChild ]\n    }\n    else {\n      let lastChild = copyChildren.slice(copyChildren.length - Math.abs(currentIndex), copyChildren.length)\n      console.log(lastChild, Math.abs(currentIndex), copyChildren.slice(0, index + 1), index)\n    //...copyChildren.slice(0, index + 1)\n      newChildrenArr = [ ...lastChild, ...copyChildren.slice(0, index + 1) ]\n    }\n\n\n    setSlideOption({\n      ...slideOption,\n      currentIndex: slideOption.currentIndex + (currentIndex),\n      currentElementIndex: index\n    })\n\n    setCopyChildren(newChildrenArr)\n    document.querySelector('.' + styles.container).style.marginLeft = ((slideOption.currentIndex + (currentIndex)) * (rootElement.offsetWidth / showElements) + 'px')\n\n  }\n\n  return (\n    <div id={ styles.root }>\n      <div className={ styles.wrapp }>\n        <div className={ styles.container }\n             style={ {\n               left: -(slideOption.currentIndex * (rootElement.offsetWidth / showElements)) + 'px',\n               width: rootElement && (rootElement.offsetWidth / showElements) * copyChildren.length + 'px'\n             } }>\n          { copyChildren.map(item => item) }\n        </div>\n      </div>\n      <div className={ styles.arrowControl }>\n        <svg width=\"65\" height=\"65\" viewBox=\"0 0 65 65\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n             onClick={ changeSlide.bind(null, -1) }\n        >\n          <circle cx=\"32.5\" cy=\"32.5\" r=\"32.5\" fill=\"#4D3E3D\"/>\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                d=\"M40.3939 47.7127L36.278 51.8287L16.7576 32.3083L36.278 12.7878L40.3939 16.9038L24.9894 32.3083L40.3939 47.7127Z\"\n                fill=\"white\"/>\n        </svg>\n        <svg width=\"65\" height=\"65\" viewBox=\"0 0 65 65\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n             onClick={ changeSlide.bind(null, 1) }\n        >\n          <circle r=\"32.5\" transform=\"matrix(-1 0 0 1 32.5 32.5)\" fill=\"#4D3E3D\"/>\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                d=\"M24.6061 47.7127L28.722 51.8287L48.2424 32.3083L28.722 12.7878L24.6061 16.9038L40.0106 32.3083L24.6061 47.7127Z\"\n                fill=\"white\"/>\n        </svg>\n\n      </div>\n      <div className={ styles.circleControl }>\n        { copyChildren.map((item, key) =>\n          <div key={ key }\n               onClick={ setCurrentSlide.bind(null, key) }\n               className={ slideOption.currentElementIndex === key ? styles.activeCircle : '' }/>\n        ) }\n      </div>\n    </div>\n  )\n}\n\nexport default SlideShow\n"]},"metadata":{},"sourceType":"module"}