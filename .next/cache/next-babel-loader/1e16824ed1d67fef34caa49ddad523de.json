{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport styles from './Slot.module.scss';\n\nconst Slot = ({\n  item,\n  index\n}) => {\n  const ref = React.createRef();\n  useEffect(() => {\n    setHeight(ref);\n  }, [ref]);\n\n  const setHeight = ({\n    current\n  }) => {\n    if (!current) return;else {\n      const rootPadding = sum(getStyle(current, ['paddingTop', 'paddingBottom']));\n      const {\n        childNodes\n      } = current;\n\n      if (childNodes.length) {\n        const titleHeight = sum(getStyle(childNodes[0], ['height']));\n        let totalHeight = item.isActive ? titleHeight + sum(getStyle(childNodes[1], ['height', 'marginTop'])) : titleHeight;\n        totalHeight += rootPadding;\n        current.style.height = totalHeight + 'px';\n      }\n    }\n  };\n\n  const sum = arr => arr.reduce((acc, item) => acc += item, 0);\n\n  const getStyle = (node, styleList) => styleList.map(style => Number(getComputedStyle(node)[style].replace('px', '')));\n\n  return __jsx(\"div\", {\n    className: styles.root + (item.isActive ? ' ' + styles.isActive : ''),\n    \"custom-id\": index,\n    ref: ref\n  }, __jsx(\"div\", {\n    className: styles.titleContainer\n  }, __jsx(\"div\", {\n    className: styles.title\n  }, item.title), __jsx(\"svg\", {\n    width: \"8\",\n    height: \"14\",\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M-1.0334e-06 11.8207L1.39309 13.2138L8 6.60691L1.39309 -5.77595e-07L-1.21788e-07 1.39309L5.21382 6.60691L-1.0334e-06 11.8207Z\",\n    fill: \"black\"\n  }))), __jsx(\"div\", {\n    className: styles.description\n  }, item.description));\n};\n\nexport default Slot;","map":null,"metadata":{},"sourceType":"module"}