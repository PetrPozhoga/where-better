{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/petrpozoga/WIB/where-better/src/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport { changeValue } from \"../store/test/actions\";\n\nvar Index = function Index(_ref) {\n  var test = _ref.test;\n  console.log(test);\n  return __jsx(\"div\", {\n    id: \"home\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, test.value);\n};\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var store, isServer;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = _ref2.store, isServer = _ref2.isServer;\n          console.log(isServer);\n\n          if (!isServer) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(store.dispatch(changeValue('Hello world')));\n\n        case 5:\n          _context.next = 8;\n          break;\n\n        case 7:\n          store.dispatch(changeValue('Hello world'));\n\n        case 8:\n          return _context.abrupt(\"return\", {});\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    test: state.test\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeValue: bindActionCreators(changeValue, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/petrpozoga/WIB/where-better/src/pages/index.js"],"names":["React","connect","bindActionCreators","changeValue","Index","test","console","log","value","getInitialProps","store","isServer","dispatch","mapStateToProps","state","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,IAAI,CAACG,KADT,CADF;AAKD,CAPD;;AASAJ,KAAK,CAACK,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT,EAAgBC,QAAhB,SAAgBA,QAAhB;AACtBL,UAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;;AADsB,eAElBA,QAFkB;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAGdD,KAAK,CAACE,QAAN,CAAeT,WAAW,CAAC,aAAD,CAA1B,CAHc;;AAAA;AAAA;AAAA;;AAAA;AAKjBO,UAAAA,KAAK,CAACE,QAAN,CAAeT,WAAW,CAAC,aAAD,CAA1B;;AALiB;AAAA,2CAMf,EANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AASA,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLT,IAAAA,IAAI,EAAES,KAAK,CAACT;AADP,GAAP;AAGD,CAJD;;AAMA,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAH,QAAQ;AAAA,SAAK;AACtCT,IAAAA,WAAW,EAAED,kBAAkB,CAACC,WAAD,EAAcS,QAAd;AADO,GAAL;AAAA,CAAnC;;AAIA,eAAeX,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { changeValue } from \"../store/test/actions\"\n\nconst Index = ({ test }) => {\n  console.log(test)\n  return (\n    <div id='home'>\n      { test.value }\n    </div>\n  )\n}\n\nIndex.getInitialProps = async ({ store, isServer }) => {\n  console.log(isServer)\n  if (isServer) {\n    await store.dispatch(changeValue('Hello world'))\n  }\n  else store.dispatch(changeValue('Hello world'))\n  return {}\n}\n\nconst mapStateToProps = state => {\n  return {\n    test: state.test\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  changeValue: bindActionCreators(changeValue, dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)\n"]},"metadata":{},"sourceType":"module"}